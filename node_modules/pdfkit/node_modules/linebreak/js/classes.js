// Generated by CoffeeScript 1.7.1
(function() {
  var AI, AL, B2, BA, BB, BK, CB, CJ, CL, CM, CP, CR, CharRange, EX, GL, H2, H3, HL, HY, ID, IN, IS, JL, JT, JV, LF, NL, NS, NU, OP, PO, PR, QU, RI, SA, SG, SP, SY, WJ, XX, ZW;

  exports.OP = OP = 0;

  exports.CL = CL = 1;

  exports.CP = CP = 2;

  exports.QU = QU = 3;

  exports.GL = GL = 4;

  exports.NS = NS = 5;

  exports.EX = EX = 6;

  exports.SY = SY = 7;

  exports.IS = IS = 8;

  exports.PR = PR = 9;

  exports.PO = PO = 10;

  exports.NU = NU = 11;

  exports.AL = AL = 12;

  exports.HL = HL = 13;

  exports.ID = ID = 14;

  exports.IN = IN = 15;

  exports.HY = HY = 16;

  exports.BA = BA = 17;

  exports.BB = BB = 18;

  exports.B2 = B2 = 19;

  exports.ZW = ZW = 20;

  exports.CM = CM = 21;

  exports.WJ = WJ = 22;

  exports.H2 = H2 = 23;

  exports.H3 = H3 = 24;

  exports.JL = JL = 25;

  exports.JV = JV = 26;

  exports.JT = JT = 27;

  exports.RI = RI = 28;

  exports.AI = AI = 29;

  exports.BK = BK = 30;

  exports.CB = CB = 31;

  exports.CJ = CJ = 32;

  exports.CR = CR = 33;

  exports.LF = LF = 34;

  exports.NL = NL = 35;

  exports.SA = SA = 36;

  exports.SG = SG = 37;

  exports.SP = SP = 38;

  exports.XX = XX = 39;

  CharRange = (function() {
    function CharRange(start, end, _class) {
      this.start = start;
      this.end = end;
      this["class"] = _class;
    }

    return CharRange;

  })();

  exports.characterClasses = [new CharRange(0x0000, 0x0008, CM), new CharRange(0x0009, 0x0009, BA), new CharRange(0x000A, 0x000A, LF), new CharRange(0x000B, 0x000C, BK), new CharRange(0x000D, 0x000D, CR), new CharRange(0x000E, 0x001F, CM), new CharRange(0x0020, 0x0020, SP), new CharRange(0x0021, 0x0021, EX), new CharRange(0x0022, 0x0022, QU), new CharRange(0x0023, 0x0023, AL), new CharRange(0x0024, 0x0024, PR), new CharRange(0x0025, 0x0025, PO), new CharRange(0x0026, 0x0026, AL), new CharRange(0x0027, 0x0027, QU), new CharRange(0x0028, 0x0028, OP), new CharRange(0x0029, 0x0029, CP), new CharRange(0x002A, 0x002A, AL), new CharRange(0x002B, 0x002B, PR), new CharRange(0x002C, 0x002C, IS), new CharRange(0x002D, 0x002D, HY), new CharRange(0x002E, 0x002E, IS), new CharRange(0x002F, 0x002F, SY), new CharRange(0x0030, 0x0039, NU), new CharRange(0x003A, 0x003B, IS), new CharRange(0x003C, 0x003E, AL), new CharRange(0x003F, 0x003F, EX), new CharRange(0x0040, 0x005A, AL), new CharRange(0x005B, 0x005B, OP), new CharRange(0x005C, 0x005C, PR), new CharRange(0x005D, 0x005D, CP), new CharRange(0x005E, 0x007A, AL), new CharRange(0x007B, 0x007B, OP), new CharRange(0x007C, 0x007C, BA), new CharRange(0x007D, 0x007D, CL), new CharRange(0x007E, 0x007E, AL), new CharRange(0x007F, 0x0084, CM), new CharRange(0x0085, 0x0085, NL), new CharRange(0x0086, 0x009F, CM), new CharRange(0x00A0, 0x00A0, GL), new CharRange(0x00A1, 0x00A1, OP), new CharRange(0x00A2, 0x00A2, PO), new CharRange(0x00A3, 0x00A5, PR), new CharRange(0x00A6, 0x00A6, AL), new CharRange(0x00A7, 0x00A8, AI), new CharRange(0x00A9, 0x00A9, AL), new CharRange(0x00AA, 0x00AA, AI), new CharRange(0x00AB, 0x00AB, QU), new CharRange(0x00AC, 0x00AC, AL), new CharRange(0x00AD, 0x00AD, BA), new CharRange(0x00AE, 0x00AF, AL), new CharRange(0x00B0, 0x00B0, PO), new CharRange(0x00B1, 0x00B1, PR), new CharRange(0x00B2, 0x00B3, AI), new CharRange(0x00B4, 0x00B4, BB), new CharRange(0x00B5, 0x00B5, AL), new CharRange(0x00B6, 0x00BA, AI), new CharRange(0x00BB, 0x00BB, QU), new CharRange(0x00BC, 0x00BE, AI), new CharRange(0x00BF, 0x00BF, OP), new CharRange(0x00C0, 0x00D6, AL), new CharRange(0x00D7, 0x00D7, AI), new CharRange(0x00D8, 0x00F6, AL), new CharRange(0x00F7, 0x00F7, AI), new CharRange(0x00F8, 0x02C6, AL), new CharRange(0x02C7, 0x02C7, AI), new CharRange(0x02C8, 0x02C8, BB), new CharRange(0x02C9, 0x02CB, AI), new CharRange(0x02CC, 0x02CC, BB), new CharRange(0x02CD, 0x02CD, AI), new CharRange(0x02CE, 0x02CF, AL), new CharRange(0x02D0, 0x02D0, AI), new CharRange(0x02D1, 0x02D7, AL), new CharRange(0x02D8, 0x02DB, AI), new CharRange(0x02DC, 0x02DC, AL), new CharRange(0x02DD, 0x02DD, AI), new CharRange(0x02DE, 0x02DE, AL), new CharRange(0x02DF, 0x02DF, BB), new CharRange(0x02E0, 0x02FF, AL), new CharRange(0x0300, 0x034E, CM), new CharRange(0x034F, 0x034F, GL), new CharRange(0x0350, 0x035B, CM), new CharRange(0x035C, 0x0362, GL), new CharRange(0x0363, 0x036F, CM), new CharRange(0x0370, 0x037D, AL), new CharRange(0x037E, 0x037E, IS), new CharRange(0x0384, 0x0482, AL), new CharRange(0x0483, 0x0489, CM), new CharRange(0x048A, 0x0587, AL), new CharRange(0x0589, 0x0589, IS), new CharRange(0x058A, 0x058A, BA), new CharRange(0x058F, 0x058F, PR), new CharRange(0x0591, 0x05BD, CM), new CharRange(0x05BE, 0x05BE, BA), new CharRange(0x05BF, 0x05BF, CM), new CharRange(0x05C0, 0x05C0, AL), new CharRange(0x05C1, 0x05C2, CM), new CharRange(0x05C3, 0x05C3, AL), new CharRange(0x05C4, 0x05C5, CM), new CharRange(0x05C6, 0x05C6, EX), new CharRange(0x05C7, 0x05C7, CM), new CharRange(0x05D0, 0x05F2, HL), new CharRange(0x05F3, 0x0608, AL), new CharRange(0x0609, 0x060B, PO), new CharRange(0x060C, 0x060D, IS), new CharRange(0x060E, 0x060F, AL), new CharRange(0x0610, 0x061A, CM), new CharRange(0x061B, 0x061F, EX), new CharRange(0x0620, 0x064A, AL), new CharRange(0x064B, 0x065F, CM), new CharRange(0x0660, 0x0669, NU), new CharRange(0x066A, 0x066A, PO), new CharRange(0x066B, 0x066C, NU), new CharRange(0x066D, 0x066F, AL), new CharRange(0x0670, 0x0670, CM), new CharRange(0x0671, 0x06D3, AL), new CharRange(0x06D4, 0x06D4, EX), new CharRange(0x06D5, 0x06D5, AL), new CharRange(0x06D6, 0x06DC, CM), new CharRange(0x06DD, 0x06DE, AL), new CharRange(0x06DF, 0x06E4, CM), new CharRange(0x06E5, 0x06E6, AL), new CharRange(0x06E7, 0x06E8, CM), new CharRange(0x06E9, 0x06E9, AL), new CharRange(0x06EA, 0x06ED, CM), new CharRange(0x06EE, 0x06EF, AL), new CharRange(0x06F0, 0x06F9, NU), new CharRange(0x06FA, 0x0710, AL), new CharRange(0x0711, 0x0711, CM), new CharRange(0x0712, 0x072F, AL), new CharRange(0x0730, 0x074A, CM), new CharRange(0x074D, 0x07A5, AL), new CharRange(0x07A6, 0x07B0, CM), new CharRange(0x07B1, 0x07B1, AL), new CharRange(0x07C0, 0x07C9, NU), new CharRange(0x07CA, 0x07EA, AL), new CharRange(0x07EB, 0x07F3, CM), new CharRange(0x07F4, 0x07F7, AL), new CharRange(0x07F8, 0x07F8, IS), new CharRange(0x07F9, 0x07F9, EX), new CharRange(0x07FA, 0x0815, AL), new CharRange(0x0816, 0x0819, CM), new CharRange(0x081A, 0x081A, AL), new CharRange(0x081B, 0x0823, CM), new CharRange(0x0824, 0x0824, AL), new CharRange(0x0825, 0x0827, CM), new CharRange(0x0828, 0x0828, AL), new CharRange(0x0829, 0x082D, CM), new CharRange(0x0830, 0x0858, AL), new CharRange(0x0859, 0x085B, CM), new CharRange(0x085E, 0x08AC, AL), new CharRange(0x08E4, 0x0903, CM), new CharRange(0x0904, 0x0939, AL), new CharRange(0x093A, 0x093C, CM), new CharRange(0x093D, 0x093D, AL), new CharRange(0x093E, 0x094F, CM), new CharRange(0x0950, 0x0950, AL), new CharRange(0x0951, 0x0957, CM), new CharRange(0x0958, 0x0961, AL), new CharRange(0x0962, 0x0963, CM), new CharRange(0x0964, 0x0965, BA), new CharRange(0x0966, 0x096F, NU), new CharRange(0x0970, 0x097F, AL), new CharRange(0x0981, 0x0983, CM), new CharRange(0x0985, 0x09B9, AL), new CharRange(0x09BC, 0x09BC, CM), new CharRange(0x09BD, 0x09BD, AL), new CharRange(0x09BE, 0x09CD, CM), new CharRange(0x09CE, 0x09CE, AL), new CharRange(0x09D7, 0x09D7, CM), new CharRange(0x09DC, 0x09E1, AL), new CharRange(0x09E2, 0x09E3, CM), new CharRange(0x09E6, 0x09EF, NU), new CharRange(0x09F0, 0x09F1, AL), new CharRange(0x09F2, 0x09F3, PO), new CharRange(0x09F4, 0x09F8, AL), new CharRange(0x09F9, 0x09F9, PO), new CharRange(0x09FA, 0x09FA, AL), new CharRange(0x09FB, 0x09FB, PR), new CharRange(0x0A01, 0x0A03, CM), new CharRange(0x0A05, 0x0A39, AL), new CharRange(0x0A3C, 0x0A51, CM), new CharRange(0x0A59, 0x0A5E, AL), new CharRange(0x0A66, 0x0A6F, NU), new CharRange(0x0A70, 0x0A71, CM), new CharRange(0x0A72, 0x0A74, AL), new CharRange(0x0A75, 0x0A83, CM), new CharRange(0x0A85, 0x0AB9, AL), new CharRange(0x0ABC, 0x0ABC, CM), new CharRange(0x0ABD, 0x0ABD, AL), new CharRange(0x0ABE, 0x0ACD, CM), new CharRange(0x0AD0, 0x0AE1, AL), new CharRange(0x0AE2, 0x0AE3, CM), new CharRange(0x0AE6, 0x0AEF, NU), new CharRange(0x0AF0, 0x0AF0, AL), new CharRange(0x0AF1, 0x0AF1, PR), new CharRange(0x0B01, 0x0B03, CM), new CharRange(0x0B05, 0x0B39, AL), new CharRange(0x0B3C, 0x0B3C, CM), new CharRange(0x0B3D, 0x0B3D, AL), new CharRange(0x0B3E, 0x0B57, CM), new CharRange(0x0B5C, 0x0B61, AL), new CharRange(0x0B62, 0x0B63, CM), new CharRange(0x0B66, 0x0B6F, NU), new CharRange(0x0B70, 0x0B77, AL), new CharRange(0x0B82, 0x0B82, CM), new CharRange(0x0B83, 0x0BB9, AL), new CharRange(0x0BBE, 0x0BCD, CM), new CharRange(0x0BD0, 0x0BD0, AL), new CharRange(0x0BD7, 0x0BD7, CM), new CharRange(0x0BE6, 0x0BEF, NU), new CharRange(0x0BF0, 0x0BF8, AL), new CharRange(0x0BF9, 0x0BF9, PR), new CharRange(0x0BFA, 0x0BFA, AL), new CharRange(0x0C01, 0x0C03, CM), new CharRange(0x0C05, 0x0C3D, AL), new CharRange(0x0C3E, 0x0C56, CM), new CharRange(0x0C58, 0x0C61, AL), new CharRange(0x0C62, 0x0C63, CM), new CharRange(0x0C66, 0x0C6F, NU), new CharRange(0x0C78, 0x0C7F, AL), new CharRange(0x0C82, 0x0C83, CM), new CharRange(0x0C85, 0x0CB9, AL), new CharRange(0x0CBC, 0x0CBC, CM), new CharRange(0x0CBD, 0x0CBD, AL), new CharRange(0x0CBE, 0x0CD6, CM), new CharRange(0x0CDE, 0x0CE1, AL), new CharRange(0x0CE2, 0x0CE3, CM), new CharRange(0x0CE6, 0x0CEF, NU), new CharRange(0x0CF1, 0x0CF2, AL), new CharRange(0x0D02, 0x0D03, CM), new CharRange(0x0D05, 0x0D3D, AL), new CharRange(0x0D3E, 0x0D4D, CM), new CharRange(0x0D4E, 0x0D4E, AL), new CharRange(0x0D57, 0x0D57, CM), new CharRange(0x0D60, 0x0D61, AL), new CharRange(0x0D62, 0x0D63, CM), new CharRange(0x0D66, 0x0D6F, NU), new CharRange(0x0D70, 0x0D75, AL), new CharRange(0x0D79, 0x0D79, PO), new CharRange(0x0D7A, 0x0D7F, AL), new CharRange(0x0D82, 0x0D83, CM), new CharRange(0x0D85, 0x0DC6, AL), new CharRange(0x0DCA, 0x0DF3, CM), new CharRange(0x0DF4, 0x0DF4, AL), new CharRange(0x0E01, 0x0E3A, SA), new CharRange(0x0E3F, 0x0E3F, PR), new CharRange(0x0E40, 0x0E4E, SA), new CharRange(0x0E4F, 0x0E4F, AL), new CharRange(0x0E50, 0x0E59, NU), new CharRange(0x0E5A, 0x0E5B, BA), new CharRange(0x0E81, 0x0ECD, SA), new CharRange(0x0ED0, 0x0ED9, NU), new CharRange(0x0EDC, 0x0EDF, SA), new CharRange(0x0F00, 0x0F00, AL), new CharRange(0x0F01, 0x0F04, BB), new CharRange(0x0F05, 0x0F05, AL), new CharRange(0x0F06, 0x0F07, BB), new CharRange(0x0F08, 0x0F08, GL), new CharRange(0x0F09, 0x0F0A, BB), new CharRange(0x0F0B, 0x0F0B, BA), new CharRange(0x0F0C, 0x0F0C, GL), new CharRange(0x0F0D, 0x0F11, EX), new CharRange(0x0F12, 0x0F12, GL), new CharRange(0x0F13, 0x0F13, AL), new CharRange(0x0F14, 0x0F14, EX), new CharRange(0x0F15, 0x0F17, AL), new CharRange(0x0F18, 0x0F19, CM), new CharRange(0x0F1A, 0x0F1F, AL), new CharRange(0x0F20, 0x0F29, NU), new CharRange(0x0F2A, 0x0F33, AL), new CharRange(0x0F34, 0x0F34, BA), new CharRange(0x0F35, 0x0F35, CM), new CharRange(0x0F36, 0x0F36, AL), new CharRange(0x0F37, 0x0F37, CM), new CharRange(0x0F38, 0x0F38, AL), new CharRange(0x0F39, 0x0F39, CM), new CharRange(0x0F3A, 0x0F3A, OP), new CharRange(0x0F3B, 0x0F3B, CL), new CharRange(0x0F3C, 0x0F3C, OP), new CharRange(0x0F3D, 0x0F3D, CL), new CharRange(0x0F3E, 0x0F3F, CM), new CharRange(0x0F40, 0x0F6C, AL), new CharRange(0x0F71, 0x0F7E, CM), new CharRange(0x0F7F, 0x0F7F, BA), new CharRange(0x0F80, 0x0F84, CM), new CharRange(0x0F85, 0x0F85, BA), new CharRange(0x0F86, 0x0F87, CM), new CharRange(0x0F88, 0x0F8C, AL), new CharRange(0x0F8D, 0x0FBC, CM), new CharRange(0x0FBE, 0x0FBF, BA), new CharRange(0x0FC0, 0x0FC5, AL), new CharRange(0x0FC6, 0x0FC6, CM), new CharRange(0x0FC7, 0x0FCF, AL), new CharRange(0x0FD0, 0x0FD1, BB), new CharRange(0x0FD2, 0x0FD2, BA), new CharRange(0x0FD3, 0x0FD3, BB), new CharRange(0x0FD4, 0x0FD8, AL), new CharRange(0x0FD9, 0x0FDA, GL), new CharRange(0x1000, 0x103F, SA), new CharRange(0x1040, 0x1049, NU), new CharRange(0x104A, 0x104B, BA), new CharRange(0x104C, 0x104F, AL), new CharRange(0x1050, 0x108F, SA), new CharRange(0x1090, 0x1099, NU), new CharRange(0x109A, 0x109F, SA), new CharRange(0x10A0, 0x10FF, AL), new CharRange(0x1100, 0x115F, JL), new CharRange(0x1160, 0x11A7, JV), new CharRange(0x11A8, 0x11FF, JT), new CharRange(0x1200, 0x135A, AL), new CharRange(0x135D, 0x135F, CM), new CharRange(0x1360, 0x1360, AL), new CharRange(0x1361, 0x1361, BA), new CharRange(0x1362, 0x13F4, AL), new CharRange(0x1400, 0x1400, BA), new CharRange(0x1401, 0x167F, AL), new CharRange(0x1680, 0x1680, BA), new CharRange(0x1681, 0x169A, AL), new CharRange(0x169B, 0x169B, OP), new CharRange(0x169C, 0x169C, CL), new CharRange(0x16A0, 0x16EA, AL), new CharRange(0x16EB, 0x16ED, BA), new CharRange(0x16EE, 0x1711, AL), new CharRange(0x1712, 0x1714, CM), new CharRange(0x1720, 0x1731, AL), new CharRange(0x1732, 0x1734, CM), new CharRange(0x1735, 0x1736, BA), new CharRange(0x1740, 0x1751, AL), new CharRange(0x1752, 0x1753, CM), new CharRange(0x1760, 0x1770, AL), new CharRange(0x1772, 0x1773, CM), new CharRange(0x1780, 0x17D3, SA), new CharRange(0x17D4, 0x17D5, BA), new CharRange(0x17D6, 0x17D6, NS), new CharRange(0x17D7, 0x17D7, SA), new CharRange(0x17D8, 0x17D8, BA), new CharRange(0x17D9, 0x17D9, AL), new CharRange(0x17DA, 0x17DA, BA), new CharRange(0x17DB, 0x17DB, PR), new CharRange(0x17DC, 0x17DD, SA), new CharRange(0x17E0, 0x17E9, NU), new CharRange(0x17F0, 0x1801, AL), new CharRange(0x1802, 0x1803, EX), new CharRange(0x1804, 0x1805, BA), new CharRange(0x1806, 0x1806, BB), new CharRange(0x1807, 0x1807, AL), new CharRange(0x1808, 0x1809, EX), new CharRange(0x180A, 0x180A, AL), new CharRange(0x180B, 0x180D, CM), new CharRange(0x180E, 0x180E, GL), new CharRange(0x1810, 0x1819, NU), new CharRange(0x1820, 0x18A8, AL), new CharRange(0x18A9, 0x18A9, CM), new CharRange(0x18AA, 0x191C, AL), new CharRange(0x1920, 0x193B, CM), new CharRange(0x1940, 0x1940, AL), new CharRange(0x1944, 0x1945, EX), new CharRange(0x1946, 0x194F, NU), new CharRange(0x1950, 0x19C9, SA), new CharRange(0x19D0, 0x19D9, NU), new CharRange(0x19DA, 0x19DF, SA), new CharRange(0x19E0, 0x1A16, AL), new CharRange(0x1A17, 0x1A1B, CM), new CharRange(0x1A1E, 0x1A1F, AL), new CharRange(0x1A20, 0x1A7C, SA), new CharRange(0x1A7F, 0x1A7F, CM), new CharRange(0x1A80, 0x1A99, NU), new CharRange(0x1AA0, 0x1AAD, SA), new CharRange(0x1B00, 0x1B04, CM), new CharRange(0x1B05, 0x1B33, AL), new CharRange(0x1B34, 0x1B44, CM), new CharRange(0x1B45, 0x1B4B, AL), new CharRange(0x1B50, 0x1B59, NU), new CharRange(0x1B5A, 0x1B5B, BA), new CharRange(0x1B5C, 0x1B5C, AL), new CharRange(0x1B5D, 0x1B60, BA), new CharRange(0x1B61, 0x1B6A, AL), new CharRange(0x1B6B, 0x1B73, CM), new CharRange(0x1B74, 0x1B7C, AL), new CharRange(0x1B80, 0x1B82, CM), new CharRange(0x1B83, 0x1BA0, AL), new CharRange(0x1BA1, 0x1BAD, CM), new CharRange(0x1BAE, 0x1BAF, AL), new CharRange(0x1BB0, 0x1BB9, NU), new CharRange(0x1BBA, 0x1BE5, AL), new CharRange(0x1BE6, 0x1BF3, CM), new CharRange(0x1BFC, 0x1C23, AL), new CharRange(0x1C24, 0x1C37, CM), new CharRange(0x1C3B, 0x1C3F, BA), new CharRange(0x1C40, 0x1C49, NU), new CharRange(0x1C4D, 0x1C4F, AL), new CharRange(0x1C50, 0x1C59, NU), new CharRange(0x1C5A, 0x1C7D, AL), new CharRange(0x1C7E, 0x1C7F, BA), new CharRange(0x1CC0, 0x1CC7, AL), new CharRange(0x1CD0, 0x1CD2, CM), new CharRange(0x1CD3, 0x1CD3, AL), new CharRange(0x1CD4, 0x1CE8, CM), new CharRange(0x1CE9, 0x1CEC, AL), new CharRange(0x1CED, 0x1CED, CM), new CharRange(0x1CEE, 0x1CF1, AL), new CharRange(0x1CF2, 0x1CF4, CM), new CharRange(0x1CF5, 0x1DBF, AL), new CharRange(0x1DC0, 0x1DFF, CM), new CharRange(0x1E00, 0x1FFC, AL), new CharRange(0x1FFD, 0x1FFD, BB), new CharRange(0x1FFE, 0x1FFE, AL), new CharRange(0x2000, 0x2006, BA), new CharRange(0x2007, 0x2007, GL), new CharRange(0x2008, 0x200A, BA), new CharRange(0x200B, 0x200B, ZW), new CharRange(0x200C, 0x200F, CM), new CharRange(0x2010, 0x2010, BA), new CharRange(0x2011, 0x2011, GL), new CharRange(0x2012, 0x2013, BA), new CharRange(0x2014, 0x2014, B2), new CharRange(0x2015, 0x2016, AI), new CharRange(0x2017, 0x2017, AL), new CharRange(0x2018, 0x2019, QU), new CharRange(0x201A, 0x201A, OP), new CharRange(0x201B, 0x201D, QU), new CharRange(0x201E, 0x201E, OP), new CharRange(0x201F, 0x201F, QU), new CharRange(0x2020, 0x2021, AI), new CharRange(0x2022, 0x2023, AL), new CharRange(0x2024, 0x2026, IN), new CharRange(0x2027, 0x2027, BA), new CharRange(0x2028, 0x2029, BK), new CharRange(0x202A, 0x202E, CM), new CharRange(0x202F, 0x202F, GL), new CharRange(0x2030, 0x2037, PO), new CharRange(0x2038, 0x2038, AL), new CharRange(0x2039, 0x203A, QU), new CharRange(0x203B, 0x203B, AI), new CharRange(0x203C, 0x203D, NS), new CharRange(0x203E, 0x2043, AL), new CharRange(0x2044, 0x2044, IS), new CharRange(0x2045, 0x2045, OP), new CharRange(0x2046, 0x2046, CL), new CharRange(0x2047, 0x2049, NS), new CharRange(0x204A, 0x2055, AL), new CharRange(0x2056, 0x2056, BA), new CharRange(0x2057, 0x2057, AL), new CharRange(0x2058, 0x205B, BA), new CharRange(0x205C, 0x205C, AL), new CharRange(0x205D, 0x205F, BA), new CharRange(0x2060, 0x2060, WJ), new CharRange(0x2061, 0x2064, AL), new CharRange(0x206A, 0x206F, CM), new CharRange(0x2070, 0x2071, AL), new CharRange(0x2074, 0x2074, AI), new CharRange(0x2075, 0x207C, AL), new CharRange(0x207D, 0x207D, OP), new CharRange(0x207E, 0x207E, CL), new CharRange(0x207F, 0x207F, AI), new CharRange(0x2080, 0x2080, AL), new CharRange(0x2081, 0x2084, AI), new CharRange(0x2085, 0x208C, AL), new CharRange(0x208D, 0x208D, OP), new CharRange(0x208E, 0x208E, CL), new CharRange(0x2090, 0x209C, AL), new CharRange(0x20A0, 0x20A6, PR), new CharRange(0x20A7, 0x20A7, PO), new CharRange(0x20A8, 0x20B5, PR), new CharRange(0x20B6, 0x20B6, PO), new CharRange(0x20B7, 0x20BA, PR), new CharRange(0x20D0, 0x20F0, CM), new CharRange(0x2100, 0x2102, AL), new CharRange(0x2103, 0x2103, PO), new CharRange(0x2104, 0x2104, AL), new CharRange(0x2105, 0x2105, AI), new CharRange(0x2106, 0x2108, AL), new CharRange(0x2109, 0x2109, PO), new CharRange(0x210A, 0x2112, AL), new CharRange(0x2113, 0x2113, AI), new CharRange(0x2114, 0x2115, AL), new CharRange(0x2116, 0x2116, PR), new CharRange(0x2117, 0x2120, AL), new CharRange(0x2121, 0x2122, AI), new CharRange(0x2123, 0x212A, AL), new CharRange(0x212B, 0x212B, AI), new CharRange(0x212C, 0x2153, AL), new CharRange(0x2154, 0x2155, AI), new CharRange(0x2156, 0x215A, AL), new CharRange(0x215B, 0x215B, AI), new CharRange(0x215C, 0x215D, AL), new CharRange(0x215E, 0x215E, AI), new CharRange(0x215F, 0x215F, AL), new CharRange(0x2160, 0x216B, AI), new CharRange(0x216C, 0x216F, AL), new CharRange(0x2170, 0x2179, AI), new CharRange(0x217A, 0x2188, AL), new CharRange(0x2189, 0x2199, AI), new CharRange(0x219A, 0x21D1, AL), new CharRange(0x21D2, 0x21D2, AI), new CharRange(0x21D3, 0x21D3, AL), new CharRange(0x21D4, 0x21D4, AI), new CharRange(0x21D5, 0x21FF, AL), new CharRange(0x2200, 0x2200, AI), new CharRange(0x2201, 0x2201, AL), new CharRange(0x2202, 0x2203, AI), new CharRange(0x2204, 0x2206, AL), new CharRange(0x2207, 0x2208, AI), new CharRange(0x2209, 0x220A, AL), new CharRange(0x220B, 0x220B, AI), new CharRange(0x220C, 0x220E, AL), new CharRange(0x220F, 0x220F, AI), new CharRange(0x2210, 0x2210, AL), new CharRange(0x2211, 0x2211, AI), new CharRange(0x2212, 0x2213, PR), new CharRange(0x2214, 0x2214, AL), new CharRange(0x2215, 0x2215, AI), new CharRange(0x2216, 0x2219, AL), new CharRange(0x221A, 0x221A, AI), new CharRange(0x221B, 0x221C, AL), new CharRange(0x221D, 0x2220, AI), new CharRange(0x2221, 0x2222, AL), new CharRange(0x2223, 0x2223, AI), new CharRange(0x2224, 0x2224, AL), new CharRange(0x2225, 0x2225, AI), new CharRange(0x2226, 0x2226, AL), new CharRange(0x2227, 0x222C, AI), new CharRange(0x222D, 0x222D, AL), new CharRange(0x222E, 0x222E, AI), new CharRange(0x222F, 0x2233, AL), new CharRange(0x2234, 0x2237, AI), new CharRange(0x2238, 0x223B, AL), new CharRange(0x223C, 0x223D, AI), new CharRange(0x223E, 0x2247, AL), new CharRange(0x2248, 0x2248, AI), new CharRange(0x2249, 0x224B, AL), new CharRange(0x224C, 0x224C, AI), new CharRange(0x224D, 0x2251, AL), new CharRange(0x2252, 0x2252, AI), new CharRange(0x2253, 0x225F, AL), new CharRange(0x2260, 0x2261, AI), new CharRange(0x2262, 0x2263, AL), new CharRange(0x2264, 0x2267, AI), new CharRange(0x2268, 0x2269, AL), new CharRange(0x226A, 0x226B, AI), new CharRange(0x226C, 0x226D, AL), new CharRange(0x226E, 0x226F, AI), new CharRange(0x2270, 0x2281, AL), new CharRange(0x2282, 0x2283, AI), new CharRange(0x2284, 0x2285, AL), new CharRange(0x2286, 0x2287, AI), new CharRange(0x2288, 0x2294, AL), new CharRange(0x2295, 0x2295, AI), new CharRange(0x2296, 0x2298, AL), new CharRange(0x2299, 0x2299, AI), new CharRange(0x229A, 0x22A4, AL), new CharRange(0x22A5, 0x22A5, AI), new CharRange(0x22A6, 0x22BE, AL), new CharRange(0x22BF, 0x22BF, AI), new CharRange(0x22C0, 0x2311, AL), new CharRange(0x2312, 0x2312, AI), new CharRange(0x2313, 0x2319, AL), new CharRange(0x231A, 0x231B, ID), new CharRange(0x231C, 0x2328, AL), new CharRange(0x2329, 0x2329, OP), new CharRange(0x232A, 0x232A, CL), new CharRange(0x232B, 0x23EF, AL), new CharRange(0x23F0, 0x23F3, ID), new CharRange(0x2400, 0x244A, AL), new CharRange(0x2460, 0x24FE, AI), new CharRange(0x24FF, 0x24FF, AL), new CharRange(0x2500, 0x254B, AI), new CharRange(0x254C, 0x254F, AL), new CharRange(0x2550, 0x2574, AI), new CharRange(0x2575, 0x257F, AL), new CharRange(0x2580, 0x258F, AI), new CharRange(0x2590, 0x2591, AL), new CharRange(0x2592, 0x2595, AI), new CharRange(0x2596, 0x259F, AL), new CharRange(0x25A0, 0x25A1, AI), new CharRange(0x25A2, 0x25A2, AL), new CharRange(0x25A3, 0x25A9, AI), new CharRange(0x25AA, 0x25B1, AL), new CharRange(0x25B2, 0x25B3, AI), new CharRange(0x25B4, 0x25B5, AL), new CharRange(0x25B6, 0x25B7, AI), new CharRange(0x25B8, 0x25BB, AL), new CharRange(0x25BC, 0x25BD, AI), new CharRange(0x25BE, 0x25BF, AL), new CharRange(0x25C0, 0x25C1, AI), new CharRange(0x25C2, 0x25C5, AL), new CharRange(0x25C6, 0x25C8, AI), new CharRange(0x25C9, 0x25CA, AL), new CharRange(0x25CB, 0x25CB, AI), new CharRange(0x25CC, 0x25CD, AL), new CharRange(0x25CE, 0x25D1, AI), new CharRange(0x25D2, 0x25E1, AL), new CharRange(0x25E2, 0x25E5, AI), new CharRange(0x25E6, 0x25EE, AL), new CharRange(0x25EF, 0x25EF, AI), new CharRange(0x25F0, 0x25FF, AL), new CharRange(0x2600, 0x2603, ID), new CharRange(0x2604, 0x2604, AL), new CharRange(0x2605, 0x2606, AI), new CharRange(0x2607, 0x2608, AL), new CharRange(0x2609, 0x2609, AI), new CharRange(0x260A, 0x260D, AL), new CharRange(0x260E, 0x260F, AI), new CharRange(0x2610, 0x2613, AL), new CharRange(0x2614, 0x2615, ID), new CharRange(0x2616, 0x2617, AI), new CharRange(0x2618, 0x2618, ID), new CharRange(0x2619, 0x2619, AL), new CharRange(0x261A, 0x261F, ID), new CharRange(0x2620, 0x2638, AL), new CharRange(0x2639, 0x263B, ID), new CharRange(0x263C, 0x263F, AL), new CharRange(0x2640, 0x2640, AI), new CharRange(0x2641, 0x2641, AL), new CharRange(0x2642, 0x2642, AI), new CharRange(0x2643, 0x265F, AL), new CharRange(0x2660, 0x2661, AI), new CharRange(0x2662, 0x2662, AL), new CharRange(0x2663, 0x2665, AI), new CharRange(0x2666, 0x2666, AL), new CharRange(0x2667, 0x2667, AI), new CharRange(0x2668, 0x2668, ID), new CharRange(0x2669, 0x266A, AI), new CharRange(0x266B, 0x266B, AL), new CharRange(0x266C, 0x266D, AI), new CharRange(0x266E, 0x266E, AL), new CharRange(0x266F, 0x266F, AI), new CharRange(0x2670, 0x267E, AL), new CharRange(0x267F, 0x267F, ID), new CharRange(0x2680, 0x269D, AL), new CharRange(0x269E, 0x269F, AI), new CharRange(0x26A0, 0x26BC, AL), new CharRange(0x26BD, 0x26C8, ID), new CharRange(0x26C9, 0x26CC, AI), new CharRange(0x26CD, 0x26CD, ID), new CharRange(0x26CE, 0x26CE, AL), new CharRange(0x26CF, 0x26D1, ID), new CharRange(0x26D2, 0x26D2, AI), new CharRange(0x26D3, 0x26D4, ID), new CharRange(0x26D5, 0x26D7, AI), new CharRange(0x26D8, 0x26D9, ID), new CharRange(0x26DA, 0x26DB, AI), new CharRange(0x26DC, 0x26DC, ID), new CharRange(0x26DD, 0x26DE, AI), new CharRange(0x26DF, 0x26E1, ID), new CharRange(0x26E2, 0x26E2, AL), new CharRange(0x26E3, 0x26E3, AI), new CharRange(0x26E4, 0x26E7, AL), new CharRange(0x26E8, 0x26E9, AI), new CharRange(0x26EA, 0x26EA, ID), new CharRange(0x26EB, 0x26F0, AI), new CharRange(0x26F1, 0x26F5, ID), new CharRange(0x26F6, 0x26F6, AI), new CharRange(0x26F7, 0x26FA, ID), new CharRange(0x26FB, 0x26FC, AI), new CharRange(0x26FD, 0x2704, ID), new CharRange(0x2705, 0x2707, AL), new CharRange(0x2708, 0x270D, ID), new CharRange(0x270E, 0x2756, AL), new CharRange(0x2757, 0x2757, AI), new CharRange(0x2758, 0x275A, AL), new CharRange(0x275B, 0x275E, QU), new CharRange(0x275F, 0x2761, AL), new CharRange(0x2762, 0x2763, EX), new CharRange(0x2764, 0x2767, AL), new CharRange(0x2768, 0x2768, OP), new CharRange(0x2769, 0x2769, CL), new CharRange(0x276A, 0x276A, OP), new CharRange(0x276B, 0x276B, CL), new CharRange(0x276C, 0x276C, OP), new CharRange(0x276D, 0x276D, CL), new CharRange(0x276E, 0x276E, OP), new CharRange(0x276F, 0x276F, CL), new CharRange(0x2770, 0x2770, OP), new CharRange(0x2771, 0x2771, CL), new CharRange(0x2772, 0x2772, OP), new CharRange(0x2773, 0x2773, CL), new CharRange(0x2774, 0x2774, OP), new CharRange(0x2775, 0x2775, CL), new CharRange(0x2776, 0x2793, AI), new CharRange(0x2794, 0x27C4, AL), new CharRange(0x27C5, 0x27C5, OP), new CharRange(0x27C6, 0x27C6, CL), new CharRange(0x27C7, 0x27E5, AL), new CharRange(0x27E6, 0x27E6, OP), new CharRange(0x27E7, 0x27E7, CL), new CharRange(0x27E8, 0x27E8, OP), new CharRange(0x27E9, 0x27E9, CL), new CharRange(0x27EA, 0x27EA, OP), new CharRange(0x27EB, 0x27EB, CL), new CharRange(0x27EC, 0x27EC, OP), new CharRange(0x27ED, 0x27ED, CL), new CharRange(0x27EE, 0x27EE, OP), new CharRange(0x27EF, 0x27EF, CL), new CharRange(0x27F0, 0x2982, AL), new CharRange(0x2983, 0x2983, OP), new CharRange(0x2984, 0x2984, CL), new CharRange(0x2985, 0x2985, OP), new CharRange(0x2986, 0x2986, CL), new CharRange(0x2987, 0x2987, OP), new CharRange(0x2988, 0x2988, CL), new CharRange(0x2989, 0x2989, OP), new CharRange(0x298A, 0x298A, CL), new CharRange(0x298B, 0x298B, OP), new CharRange(0x298C, 0x298C, CL), new CharRange(0x298D, 0x298D, OP), new CharRange(0x298E, 0x298E, CL), new CharRange(0x298F, 0x298F, OP), new CharRange(0x2990, 0x2990, CL), new CharRange(0x2991, 0x2991, OP), new CharRange(0x2992, 0x2992, CL), new CharRange(0x2993, 0x2993, OP), new CharRange(0x2994, 0x2994, CL), new CharRange(0x2995, 0x2995, OP), new CharRange(0x2996, 0x2996, CL), new CharRange(0x2997, 0x2997, OP), new CharRange(0x2998, 0x2998, CL), new CharRange(0x2999, 0x29D7, AL), new CharRange(0x29D8, 0x29D8, OP), new CharRange(0x29D9, 0x29D9, CL), new CharRange(0x29DA, 0x29DA, OP), new CharRange(0x29DB, 0x29DB, CL), new CharRange(0x29DC, 0x29FB, AL), new CharRange(0x29FC, 0x29FC, OP), new CharRange(0x29FD, 0x29FD, CL), new CharRange(0x29FE, 0x2B54, AL), new CharRange(0x2B55, 0x2B59, AI), new CharRange(0x2C00, 0x2CEE, AL), new CharRange(0x2CEF, 0x2CF1, CM), new CharRange(0x2CF2, 0x2CF3, AL), new CharRange(0x2CF9, 0x2CF9, EX), new CharRange(0x2CFA, 0x2CFC, BA), new CharRange(0x2CFD, 0x2CFD, AL), new CharRange(0x2CFE, 0x2CFE, EX), new CharRange(0x2CFF, 0x2CFF, BA), new CharRange(0x2D00, 0x2D6F, AL), new CharRange(0x2D70, 0x2D70, BA), new CharRange(0x2D7F, 0x2D7F, CM), new CharRange(0x2D80, 0x2DDE, AL), new CharRange(0x2DE0, 0x2DFF, CM), new CharRange(0x2E00, 0x2E0D, QU), new CharRange(0x2E0E, 0x2E15, BA), new CharRange(0x2E16, 0x2E16, AL), new CharRange(0x2E17, 0x2E17, BA), new CharRange(0x2E18, 0x2E18, OP), new CharRange(0x2E19, 0x2E19, BA), new CharRange(0x2E1A, 0x2E1B, AL), new CharRange(0x2E1C, 0x2E1D, QU), new CharRange(0x2E1E, 0x2E1F, AL), new CharRange(0x2E20, 0x2E21, QU), new CharRange(0x2E22, 0x2E22, OP), new CharRange(0x2E23, 0x2E23, CL), new CharRange(0x2E24, 0x2E24, OP), new CharRange(0x2E25, 0x2E25, CL), new CharRange(0x2E26, 0x2E26, OP), new CharRange(0x2E27, 0x2E27, CL), new CharRange(0x2E28, 0x2E28, OP), new CharRange(0x2E29, 0x2E29, CL), new CharRange(0x2E2A, 0x2E2D, BA), new CharRange(0x2E2E, 0x2E2E, EX), new CharRange(0x2E2F, 0x2E2F, AL), new CharRange(0x2E30, 0x2E31, BA), new CharRange(0x2E32, 0x2E32, AL), new CharRange(0x2E33, 0x2E34, BA), new CharRange(0x2E35, 0x2E39, AL), new CharRange(0x2E3A, 0x2E3B, B2), new CharRange(0x2E80, 0x3000, ID), new CharRange(0x3001, 0x3002, CL), new CharRange(0x3003, 0x3004, ID), new CharRange(0x3005, 0x3005, NS), new CharRange(0x3006, 0x3007, ID), new CharRange(0x3008, 0x3008, OP), new CharRange(0x3009, 0x3009, CL), new CharRange(0x300A, 0x300A, OP), new CharRange(0x300B, 0x300B, CL), new CharRange(0x300C, 0x300C, OP), new CharRange(0x300D, 0x300D, CL), new CharRange(0x300E, 0x300E, OP), new CharRange(0x300F, 0x300F, CL), new CharRange(0x3010, 0x3010, OP), new CharRange(0x3011, 0x3011, CL), new CharRange(0x3012, 0x3013, ID), new CharRange(0x3014, 0x3014, OP), new CharRange(0x3015, 0x3015, CL), new CharRange(0x3016, 0x3016, OP), new CharRange(0x3017, 0x3017, CL), new CharRange(0x3018, 0x3018, OP), new CharRange(0x3019, 0x3019, CL), new CharRange(0x301A, 0x301A, OP), new CharRange(0x301B, 0x301B, CL), new CharRange(0x301C, 0x301C, NS), new CharRange(0x301D, 0x301D, OP), new CharRange(0x301E, 0x301F, CL), new CharRange(0x3020, 0x3029, ID), new CharRange(0x302A, 0x302F, CM), new CharRange(0x3030, 0x303A, ID), new CharRange(0x303B, 0x303C, NS), new CharRange(0x303D, 0x303F, ID), new CharRange(0x3041, 0x3041, CJ), new CharRange(0x3042, 0x3042, ID), new CharRange(0x3043, 0x3043, CJ), new CharRange(0x3044, 0x3044, ID), new CharRange(0x3045, 0x3045, CJ), new CharRange(0x3046, 0x3046, ID), new CharRange(0x3047, 0x3047, CJ), new CharRange(0x3048, 0x3048, ID), new CharRange(0x3049, 0x3049, CJ), new CharRange(0x304A, 0x3062, ID), new CharRange(0x3063, 0x3063, CJ), new CharRange(0x3064, 0x3082, ID), new CharRange(0x3083, 0x3083, CJ), new CharRange(0x3084, 0x3084, ID), new CharRange(0x3085, 0x3085, CJ), new CharRange(0x3086, 0x3086, ID), new CharRange(0x3087, 0x3087, CJ), new CharRange(0x3088, 0x308D, ID), new CharRange(0x308E, 0x308E, CJ), new CharRange(0x308F, 0x3094, ID), new CharRange(0x3095, 0x3096, CJ), new CharRange(0x3099, 0x309A, CM), new CharRange(0x309B, 0x309E, NS), new CharRange(0x309F, 0x309F, ID), new CharRange(0x30A0, 0x30A0, NS), new CharRange(0x30A1, 0x30A1, CJ), new CharRange(0x30A2, 0x30A2, ID), new CharRange(0x30A3, 0x30A3, CJ), new CharRange(0x30A4, 0x30A4, ID), new CharRange(0x30A5, 0x30A5, CJ), new CharRange(0x30A6, 0x30A6, ID), new CharRange(0x30A7, 0x30A7, CJ), new CharRange(0x30A8, 0x30A8, ID), new CharRange(0x30A9, 0x30A9, CJ), new CharRange(0x30AA, 0x30C2, ID), new CharRange(0x30C3, 0x30C3, CJ), new CharRange(0x30C4, 0x30E2, ID), new CharRange(0x30E3, 0x30E3, CJ), new CharRange(0x30E4, 0x30E4, ID), new CharRange(0x30E5, 0x30E5, CJ), new CharRange(0x30E6, 0x30E6, ID), new CharRange(0x30E7, 0x30E7, CJ), new CharRange(0x30E8, 0x30ED, ID), new CharRange(0x30EE, 0x30EE, CJ), new CharRange(0x30EF, 0x30F4, ID), new CharRange(0x30F5, 0x30F6, CJ), new CharRange(0x30F7, 0x30FA, ID), new CharRange(0x30FB, 0x30FB, NS), new CharRange(0x30FC, 0x30FC, CJ), new CharRange(0x30FD, 0x30FE, NS), new CharRange(0x30FF, 0x31E3, ID), new CharRange(0x31F0, 0x31FF, CJ), new CharRange(0x3200, 0x3247, ID), new CharRange(0x3248, 0x324F, AI), new CharRange(0x3250, 0x4DBF, ID), new CharRange(0x4DC0, 0x4DFF, AL), new CharRange(0x4E00, 0xA014, ID), new CharRange(0xA015, 0xA015, NS), new CharRange(0xA016, 0xA4C6, ID), new CharRange(0xA4D0, 0xA4FD, AL), new CharRange(0xA4FE, 0xA4FF, BA), new CharRange(0xA500, 0xA60C, AL), new CharRange(0xA60D, 0xA60D, BA), new CharRange(0xA60E, 0xA60E, EX), new CharRange(0xA60F, 0xA60F, BA), new CharRange(0xA610, 0xA61F, AL), new CharRange(0xA620, 0xA629, NU), new CharRange(0xA62A, 0xA66E, AL), new CharRange(0xA66F, 0xA672, CM), new CharRange(0xA673, 0xA673, AL), new CharRange(0xA674, 0xA67D, CM), new CharRange(0xA67E, 0xA697, AL), new CharRange(0xA69F, 0xA69F, CM), new CharRange(0xA6A0, 0xA6EF, AL), new CharRange(0xA6F0, 0xA6F1, CM), new CharRange(0xA6F2, 0xA6F2, AL), new CharRange(0xA6F3, 0xA6F7, BA), new CharRange(0xA700, 0xA801, AL), new CharRange(0xA802, 0xA802, CM), new CharRange(0xA803, 0xA805, AL), new CharRange(0xA806, 0xA806, CM), new CharRange(0xA807, 0xA80A, AL), new CharRange(0xA80B, 0xA80B, CM), new CharRange(0xA80C, 0xA822, AL), new CharRange(0xA823, 0xA827, CM), new CharRange(0xA828, 0xA837, AL), new CharRange(0xA838, 0xA838, PO), new CharRange(0xA839, 0xA873, AL), new CharRange(0xA874, 0xA875, BB), new CharRange(0xA876, 0xA877, EX), new CharRange(0xA880, 0xA881, CM), new CharRange(0xA882, 0xA8B3, AL), new CharRange(0xA8B4, 0xA8C4, CM), new CharRange(0xA8CE, 0xA8CF, BA), new CharRange(0xA8D0, 0xA8D9, NU), new CharRange(0xA8E0, 0xA8F1, CM), new CharRange(0xA8F2, 0xA8FB, AL), new CharRange(0xA900, 0xA909, NU), new CharRange(0xA90A, 0xA925, AL), new CharRange(0xA926, 0xA92D, CM), new CharRange(0xA92E, 0xA92F, BA), new CharRange(0xA930, 0xA946, AL), new CharRange(0xA947, 0xA953, CM), new CharRange(0xA95F, 0xA95F, AL), new CharRange(0xA960, 0xA97C, JL), new CharRange(0xA980, 0xA983, CM), new CharRange(0xA984, 0xA9B2, AL), new CharRange(0xA9B3, 0xA9C0, CM), new CharRange(0xA9C1, 0xA9C6, AL), new CharRange(0xA9C7, 0xA9C9, BA), new CharRange(0xA9CA, 0xA9CF, AL), new CharRange(0xA9D0, 0xA9D9, NU), new CharRange(0xA9DE, 0xAA28, AL), new CharRange(0xAA29, 0xAA36, CM), new CharRange(0xAA40, 0xAA42, AL), new CharRange(0xAA43, 0xAA43, CM), new CharRange(0xAA44, 0xAA4B, AL), new CharRange(0xAA4C, 0xAA4D, CM), new CharRange(0xAA50, 0xAA59, NU), new CharRange(0xAA5C, 0xAA5C, AL), new CharRange(0xAA5D, 0xAA5F, BA), new CharRange(0xAA60, 0xAADF, SA), new CharRange(0xAAE0, 0xAAEA, AL), new CharRange(0xAAEB, 0xAAEF, CM), new CharRange(0xAAF0, 0xAAF1, BA), new CharRange(0xAAF2, 0xAAF4, AL), new CharRange(0xAAF5, 0xAAF6, CM), new CharRange(0xAB01, 0xABE2, AL), new CharRange(0xABE3, 0xABEA, CM), new CharRange(0xABEB, 0xABEB, BA), new CharRange(0xABEC, 0xABED, CM), new CharRange(0xABF0, 0xABF9, NU), new CharRange(0xAC00, 0xAC00, H2), new CharRange(0xAC01, 0xAC1B, H3), new CharRange(0xAC1C, 0xAC1C, H2), new CharRange(0xAC1D, 0xAC37, H3), new CharRange(0xAC38, 0xAC38, H2), new CharRange(0xAC39, 0xAC53, H3), new CharRange(0xAC54, 0xAC54, H2), new CharRange(0xAC55, 0xAC6F, H3), new CharRange(0xAC70, 0xAC70, H2), new CharRange(0xAC71, 0xAC8B, H3), new CharRange(0xAC8C, 0xAC8C, H2), new CharRange(0xAC8D, 0xACA7, H3), new CharRange(0xACA8, 0xACA8, H2), new CharRange(0xACA9, 0xACC3, H3), new CharRange(0xACC4, 0xACC4, H2), new CharRange(0xACC5, 0xACDF, H3), new CharRange(0xACE0, 0xACE0, H2), new CharRange(0xACE1, 0xACFB, H3), new CharRange(0xACFC, 0xACFC, H2), new CharRange(0xACFD, 0xAD17, H3), new CharRange(0xAD18, 0xAD18, H2), new CharRange(0xAD19, 0xAD33, H3), new CharRange(0xAD34, 0xAD34, H2), new CharRange(0xAD35, 0xAD4F, H3), new CharRange(0xAD50, 0xAD50, H2), new CharRange(0xAD51, 0xAD6B, H3), new CharRange(0xAD6C, 0xAD6C, H2), new CharRange(0xAD6D, 0xAD87, H3), new CharRange(0xAD88, 0xAD88, H2), new CharRange(0xAD89, 0xADA3, H3), new CharRange(0xADA4, 0xADA4, H2), new CharRange(0xADA5, 0xADBF, H3), new CharRange(0xADC0, 0xADC0, H2), new CharRange(0xADC1, 0xADDB, H3), new CharRange(0xADDC, 0xADDC, H2), new CharRange(0xADDD, 0xADF7, H3), new CharRange(0xADF8, 0xADF8, H2), new CharRange(0xADF9, 0xAE13, H3), new CharRange(0xAE14, 0xAE14, H2), new CharRange(0xAE15, 0xAE2F, H3), new CharRange(0xAE30, 0xAE30, H2), new CharRange(0xAE31, 0xAE4B, H3), new CharRange(0xAE4C, 0xAE4C, H2), new CharRange(0xAE4D, 0xAE67, H3), new CharRange(0xAE68, 0xAE68, H2), new CharRange(0xAE69, 0xAE83, H3), new CharRange(0xAE84, 0xAE84, H2), new CharRange(0xAE85, 0xAE9F, H3), new CharRange(0xAEA0, 0xAEA0, H2), new CharRange(0xAEA1, 0xAEBB, H3), new CharRange(0xAEBC, 0xAEBC, H2), new CharRange(0xAEBD, 0xAED7, H3), new CharRange(0xAED8, 0xAED8, H2), new CharRange(0xAED9, 0xAEF3, H3), new CharRange(0xAEF4, 0xAEF4, H2), new CharRange(0xAEF5, 0xAF0F, H3), new CharRange(0xAF10, 0xAF10, H2), new CharRange(0xAF11, 0xAF2B, H3), new CharRange(0xAF2C, 0xAF2C, H2), new CharRange(0xAF2D, 0xAF47, H3), new CharRange(0xAF48, 0xAF48, H2), new CharRange(0xAF49, 0xAF63, H3), new CharRange(0xAF64, 0xAF64, H2), new CharRange(0xAF65, 0xAF7F, H3), new CharRange(0xAF80, 0xAF80, H2), new CharRange(0xAF81, 0xAF9B, H3), new CharRange(0xAF9C, 0xAF9C, H2), new CharRange(0xAF9D, 0xAFB7, H3), new CharRange(0xAFB8, 0xAFB8, H2), new CharRange(0xAFB9, 0xAFD3, H3), new CharRange(0xAFD4, 0xAFD4, H2), new CharRange(0xAFD5, 0xAFEF, H3), new CharRange(0xAFF0, 0xAFF0, H2), new CharRange(0xAFF1, 0xB00B, H3), new CharRange(0xB00C, 0xB00C, H2), new CharRange(0xB00D, 0xB027, H3), new CharRange(0xB028, 0xB028, H2), new CharRange(0xB029, 0xB043, H3), new CharRange(0xB044, 0xB044, H2), new CharRange(0xB045, 0xB05F, H3), new CharRange(0xB060, 0xB060, H2), new CharRange(0xB061, 0xB07B, H3), new CharRange(0xB07C, 0xB07C, H2), new CharRange(0xB07D, 0xB097, H3), new CharRange(0xB098, 0xB098, H2), new CharRange(0xB099, 0xB0B3, H3), new CharRange(0xB0B4, 0xB0B4, H2), new CharRange(0xB0B5, 0xB0CF, H3), new CharRange(0xB0D0, 0xB0D0, H2), new CharRange(0xB0D1, 0xB0EB, H3), new CharRange(0xB0EC, 0xB0EC, H2), new CharRange(0xB0ED, 0xB107, H3), new CharRange(0xB108, 0xB108, H2), new CharRange(0xB109, 0xB123, H3), new CharRange(0xB124, 0xB124, H2), new CharRange(0xB125, 0xB13F, H3), new CharRange(0xB140, 0xB140, H2), new CharRange(0xB141, 0xB15B, H3), new CharRange(0xB15C, 0xB15C, H2), new CharRange(0xB15D, 0xB177, H3), new CharRange(0xB178, 0xB178, H2), new CharRange(0xB179, 0xB193, H3), new CharRange(0xB194, 0xB194, H2), new CharRange(0xB195, 0xB1AF, H3), new CharRange(0xB1B0, 0xB1B0, H2), new CharRange(0xB1B1, 0xB1CB, H3), new CharRange(0xB1CC, 0xB1CC, H2), new CharRange(0xB1CD, 0xB1E7, H3), new CharRange(0xB1E8, 0xB1E8, H2), new CharRange(0xB1E9, 0xB203, H3), new CharRange(0xB204, 0xB204, H2), new CharRange(0xB205, 0xB21F, H3), new CharRange(0xB220, 0xB220, H2), new CharRange(0xB221, 0xB23B, H3), new CharRange(0xB23C, 0xB23C, H2), new CharRange(0xB23D, 0xB257, H3), new CharRange(0xB258, 0xB258, H2), new CharRange(0xB259, 0xB273, H3), new CharRange(0xB274, 0xB274, H2), new CharRange(0xB275, 0xB28F, H3), new CharRange(0xB290, 0xB290, H2), new CharRange(0xB291, 0xB2AB, H3), new CharRange(0xB2AC, 0xB2AC, H2), new CharRange(0xB2AD, 0xB2C7, H3), new CharRange(0xB2C8, 0xB2C8, H2), new CharRange(0xB2C9, 0xB2E3, H3), new CharRange(0xB2E4, 0xB2E4, H2), new CharRange(0xB2E5, 0xB2FF, H3), new CharRange(0xB300, 0xB300, H2), new CharRange(0xB301, 0xB31B, H3), new CharRange(0xB31C, 0xB31C, H2), new CharRange(0xB31D, 0xB337, H3), new CharRange(0xB338, 0xB338, H2), new CharRange(0xB339, 0xB353, H3), new CharRange(0xB354, 0xB354, H2), new CharRange(0xB355, 0xB36F, H3), new CharRange(0xB370, 0xB370, H2), new CharRange(0xB371, 0xB38B, H3), new CharRange(0xB38C, 0xB38C, H2), new CharRange(0xB38D, 0xB3A7, H3), new CharRange(0xB3A8, 0xB3A8, H2), new CharRange(0xB3A9, 0xB3C3, H3), new CharRange(0xB3C4, 0xB3C4, H2), new CharRange(0xB3C5, 0xB3DF, H3), new CharRange(0xB3E0, 0xB3E0, H2), new CharRange(0xB3E1, 0xB3FB, H3), new CharRange(0xB3FC, 0xB3FC, H2), new CharRange(0xB3FD, 0xB417, H3), new CharRange(0xB418, 0xB418, H2), new CharRange(0xB419, 0xB433, H3), new CharRange(0xB434, 0xB434, H2), new CharRange(0xB435, 0xB44F, H3), new CharRange(0xB450, 0xB450, H2), new CharRange(0xB451, 0xB46B, H3), new CharRange(0xB46C, 0xB46C, H2), new CharRange(0xB46D, 0xB487, H3), new CharRange(0xB488, 0xB488, H2), new CharRange(0xB489, 0xB4A3, H3), new CharRange(0xB4A4, 0xB4A4, H2), new CharRange(0xB4A5, 0xB4BF, H3), new CharRange(0xB4C0, 0xB4C0, H2), new CharRange(0xB4C1, 0xB4DB, H3), new CharRange(0xB4DC, 0xB4DC, H2), new CharRange(0xB4DD, 0xB4F7, H3), new CharRange(0xB4F8, 0xB4F8, H2), new CharRange(0xB4F9, 0xB513, H3), new CharRange(0xB514, 0xB514, H2), new CharRange(0xB515, 0xB52F, H3), new CharRange(0xB530, 0xB530, H2), new CharRange(0xB531, 0xB54B, H3), new CharRange(0xB54C, 0xB54C, H2), new CharRange(0xB54D, 0xB567, H3), new CharRange(0xB568, 0xB568, H2), new CharRange(0xB569, 0xB583, H3), new CharRange(0xB584, 0xB584, H2), new CharRange(0xB585, 0xB59F, H3), new CharRange(0xB5A0, 0xB5A0, H2), new CharRange(0xB5A1, 0xB5BB, H3), new CharRange(0xB5BC, 0xB5BC, H2), new CharRange(0xB5BD, 0xB5D7, H3), new CharRange(0xB5D8, 0xB5D8, H2), new CharRange(0xB5D9, 0xB5F3, H3), new CharRange(0xB5F4, 0xB5F4, H2), new CharRange(0xB5F5, 0xB60F, H3), new CharRange(0xB610, 0xB610, H2), new CharRange(0xB611, 0xB62B, H3), new CharRange(0xB62C, 0xB62C, H2), new CharRange(0xB62D, 0xB647, H3), new CharRange(0xB648, 0xB648, H2), new CharRange(0xB649, 0xB663, H3), new CharRange(0xB664, 0xB664, H2), new CharRange(0xB665, 0xB67F, H3), new CharRange(0xB680, 0xB680, H2), new CharRange(0xB681, 0xB69B, H3), new CharRange(0xB69C, 0xB69C, H2), new CharRange(0xB69D, 0xB6B7, H3), new CharRange(0xB6B8, 0xB6B8, H2), new CharRange(0xB6B9, 0xB6D3, H3), new CharRange(0xB6D4, 0xB6D4, H2), new CharRange(0xB6D5, 0xB6EF, H3), new CharRange(0xB6F0, 0xB6F0, H2), new CharRange(0xB6F1, 0xB70B, H3), new CharRange(0xB70C, 0xB70C, H2), new CharRange(0xB70D, 0xB727, H3), new CharRange(0xB728, 0xB728, H2), new CharRange(0xB729, 0xB743, H3), new CharRange(0xB744, 0xB744, H2), new CharRange(0xB745, 0xB75F, H3), new CharRange(0xB760, 0xB760, H2), new CharRange(0xB761, 0xB77B, H3), new CharRange(0xB77C, 0xB77C, H2), new CharRange(0xB77D, 0xB797, H3), new CharRange(0xB798, 0xB798, H2), new CharRange(0xB799, 0xB7B3, H3), new CharRange(0xB7B4, 0xB7B4, H2), new CharRange(0xB7B5, 0xB7CF, H3), new CharRange(0xB7D0, 0xB7D0, H2), new CharRange(0xB7D1, 0xB7EB, H3), new CharRange(0xB7EC, 0xB7EC, H2), new CharRange(0xB7ED, 0xB807, H3), new CharRange(0xB808, 0xB808, H2), new CharRange(0xB809, 0xB823, H3), new CharRange(0xB824, 0xB824, H2), new CharRange(0xB825, 0xB83F, H3), new CharRange(0xB840, 0xB840, H2), new CharRange(0xB841, 0xB85B, H3), new CharRange(0xB85C, 0xB85C, H2), new CharRange(0xB85D, 0xB877, H3), new CharRange(0xB878, 0xB878, H2), new CharRange(0xB879, 0xB893, H3), new CharRange(0xB894, 0xB894, H2), new CharRange(0xB895, 0xB8AF, H3), new CharRange(0xB8B0, 0xB8B0, H2), new CharRange(0xB8B1, 0xB8CB, H3), new CharRange(0xB8CC, 0xB8CC, H2), new CharRange(0xB8CD, 0xB8E7, H3), new CharRange(0xB8E8, 0xB8E8, H2), new CharRange(0xB8E9, 0xB903, H3), new CharRange(0xB904, 0xB904, H2), new CharRange(0xB905, 0xB91F, H3), new CharRange(0xB920, 0xB920, H2), new CharRange(0xB921, 0xB93B, H3), new CharRange(0xB93C, 0xB93C, H2), new CharRange(0xB93D, 0xB957, H3), new CharRange(0xB958, 0xB958, H2), new CharRange(0xB959, 0xB973, H3), new CharRange(0xB974, 0xB974, H2), new CharRange(0xB975, 0xB98F, H3), new CharRange(0xB990, 0xB990, H2), new CharRange(0xB991, 0xB9AB, H3), new CharRange(0xB9AC, 0xB9AC, H2), new CharRange(0xB9AD, 0xB9C7, H3), new CharRange(0xB9C8, 0xB9C8, H2), new CharRange(0xB9C9, 0xB9E3, H3), new CharRange(0xB9E4, 0xB9E4, H2), new CharRange(0xB9E5, 0xB9FF, H3), new CharRange(0xBA00, 0xBA00, H2), new CharRange(0xBA01, 0xBA1B, H3), new CharRange(0xBA1C, 0xBA1C, H2), new CharRange(0xBA1D, 0xBA37, H3), new CharRange(0xBA38, 0xBA38, H2), new CharRange(0xBA39, 0xBA53, H3), new CharRange(0xBA54, 0xBA54, H2), new CharRange(0xBA55, 0xBA6F, H3), new CharRange(0xBA70, 0xBA70, H2), new CharRange(0xBA71, 0xBA8B, H3), new CharRange(0xBA8C, 0xBA8C, H2), new CharRange(0xBA8D, 0xBAA7, H3), new CharRange(0xBAA8, 0xBAA8, H2), new CharRange(0xBAA9, 0xBAC3, H3), new CharRange(0xBAC4, 0xBAC4, H2), new CharRange(0xBAC5, 0xBADF, H3), new CharRange(0xBAE0, 0xBAE0, H2), new CharRange(0xBAE1, 0xBAFB, H3), new CharRange(0xBAFC, 0xBAFC, H2), new CharRange(0xBAFD, 0xBB17, H3), new CharRange(0xBB18, 0xBB18, H2), new CharRange(0xBB19, 0xBB33, H3), new CharRange(0xBB34, 0xBB34, H2), new CharRange(0xBB35, 0xBB4F, H3), new CharRange(0xBB50, 0xBB50, H2), new CharRange(0xBB51, 0xBB6B, H3), new CharRange(0xBB6C, 0xBB6C, H2), new CharRange(0xBB6D, 0xBB87, H3), new CharRange(0xBB88, 0xBB88, H2), new CharRange(0xBB89, 0xBBA3, H3), new CharRange(0xBBA4, 0xBBA4, H2), new CharRange(0xBBA5, 0xBBBF, H3), new CharRange(0xBBC0, 0xBBC0, H2), new CharRange(0xBBC1, 0xBBDB, H3), new CharRange(0xBBDC, 0xBBDC, H2), new CharRange(0xBBDD, 0xBBF7, H3), new CharRange(0xBBF8, 0xBBF8, H2), new CharRange(0xBBF9, 0xBC13, H3), new CharRange(0xBC14, 0xBC14, H2), new CharRange(0xBC15, 0xBC2F, H3), new CharRange(0xBC30, 0xBC30, H2), new CharRange(0xBC31, 0xBC4B, H3), new CharRange(0xBC4C, 0xBC4C, H2), new CharRange(0xBC4D, 0xBC67, H3), new CharRange(0xBC68, 0xBC68, H2), new CharRange(0xBC69, 0xBC83, H3), new CharRange(0xBC84, 0xBC84, H2), new CharRange(0xBC85, 0xBC9F, H3), new CharRange(0xBCA0, 0xBCA0, H2), new CharRange(0xBCA1, 0xBCBB, H3), new CharRange(0xBCBC, 0xBCBC, H2), new CharRange(0xBCBD, 0xBCD7, H3), new CharRange(0xBCD8, 0xBCD8, H2), new CharRange(0xBCD9, 0xBCF3, H3), new CharRange(0xBCF4, 0xBCF4, H2), new CharRange(0xBCF5, 0xBD0F, H3), new CharRange(0xBD10, 0xBD10, H2), new CharRange(0xBD11, 0xBD2B, H3), new CharRange(0xBD2C, 0xBD2C, H2), new CharRange(0xBD2D, 0xBD47, H3), new CharRange(0xBD48, 0xBD48, H2), new CharRange(0xBD49, 0xBD63, H3), new CharRange(0xBD64, 0xBD64, H2), new CharRange(0xBD65, 0xBD7F, H3), new CharRange(0xBD80, 0xBD80, H2), new CharRange(0xBD81, 0xBD9B, H3), new CharRange(0xBD9C, 0xBD9C, H2), new CharRange(0xBD9D, 0xBDB7, H3), new CharRange(0xBDB8, 0xBDB8, H2), new CharRange(0xBDB9, 0xBDD3, H3), new CharRange(0xBDD4, 0xBDD4, H2), new CharRange(0xBDD5, 0xBDEF, H3), new CharRange(0xBDF0, 0xBDF0, H2), new CharRange(0xBDF1, 0xBE0B, H3), new CharRange(0xBE0C, 0xBE0C, H2), new CharRange(0xBE0D, 0xBE27, H3), new CharRange(0xBE28, 0xBE28, H2), new CharRange(0xBE29, 0xBE43, H3), new CharRange(0xBE44, 0xBE44, H2), new CharRange(0xBE45, 0xBE5F, H3), new CharRange(0xBE60, 0xBE60, H2), new CharRange(0xBE61, 0xBE7B, H3), new CharRange(0xBE7C, 0xBE7C, H2), new CharRange(0xBE7D, 0xBE97, H3), new CharRange(0xBE98, 0xBE98, H2), new CharRange(0xBE99, 0xBEB3, H3), new CharRange(0xBEB4, 0xBEB4, H2), new CharRange(0xBEB5, 0xBECF, H3), new CharRange(0xBED0, 0xBED0, H2), new CharRange(0xBED1, 0xBEEB, H3), new CharRange(0xBEEC, 0xBEEC, H2), new CharRange(0xBEED, 0xBF07, H3), new CharRange(0xBF08, 0xBF08, H2), new CharRange(0xBF09, 0xBF23, H3), new CharRange(0xBF24, 0xBF24, H2), new CharRange(0xBF25, 0xBF3F, H3), new CharRange(0xBF40, 0xBF40, H2), new CharRange(0xBF41, 0xBF5B, H3), new CharRange(0xBF5C, 0xBF5C, H2), new CharRange(0xBF5D, 0xBF77, H3), new CharRange(0xBF78, 0xBF78, H2), new CharRange(0xBF79, 0xBF93, H3), new CharRange(0xBF94, 0xBF94, H2), new CharRange(0xBF95, 0xBFAF, H3), new CharRange(0xBFB0, 0xBFB0, H2), new CharRange(0xBFB1, 0xBFCB, H3), new CharRange(0xBFCC, 0xBFCC, H2), new CharRange(0xBFCD, 0xBFE7, H3), new CharRange(0xBFE8, 0xBFE8, H2), new CharRange(0xBFE9, 0xC003, H3), new CharRange(0xC004, 0xC004, H2), new CharRange(0xC005, 0xC01F, H3), new CharRange(0xC020, 0xC020, H2), new CharRange(0xC021, 0xC03B, H3), new CharRange(0xC03C, 0xC03C, H2), new CharRange(0xC03D, 0xC057, H3), new CharRange(0xC058, 0xC058, H2), new CharRange(0xC059, 0xC073, H3), new CharRange(0xC074, 0xC074, H2), new CharRange(0xC075, 0xC08F, H3), new CharRange(0xC090, 0xC090, H2), new CharRange(0xC091, 0xC0AB, H3), new CharRange(0xC0AC, 0xC0AC, H2), new CharRange(0xC0AD, 0xC0C7, H3), new CharRange(0xC0C8, 0xC0C8, H2), new CharRange(0xC0C9, 0xC0E3, H3), new CharRange(0xC0E4, 0xC0E4, H2), new CharRange(0xC0E5, 0xC0FF, H3), new CharRange(0xC100, 0xC100, H2), new CharRange(0xC101, 0xC11B, H3), new CharRange(0xC11C, 0xC11C, H2), new CharRange(0xC11D, 0xC137, H3), new CharRange(0xC138, 0xC138, H2), new CharRange(0xC139, 0xC153, H3), new CharRange(0xC154, 0xC154, H2), new CharRange(0xC155, 0xC16F, H3), new CharRange(0xC170, 0xC170, H2), new CharRange(0xC171, 0xC18B, H3), new CharRange(0xC18C, 0xC18C, H2), new CharRange(0xC18D, 0xC1A7, H3), new CharRange(0xC1A8, 0xC1A8, H2), new CharRange(0xC1A9, 0xC1C3, H3), new CharRange(0xC1C4, 0xC1C4, H2), new CharRange(0xC1C5, 0xC1DF, H3), new CharRange(0xC1E0, 0xC1E0, H2), new CharRange(0xC1E1, 0xC1FB, H3), new CharRange(0xC1FC, 0xC1FC, H2), new CharRange(0xC1FD, 0xC217, H3), new CharRange(0xC218, 0xC218, H2), new CharRange(0xC219, 0xC233, H3), new CharRange(0xC234, 0xC234, H2), new CharRange(0xC235, 0xC24F, H3), new CharRange(0xC250, 0xC250, H2), new CharRange(0xC251, 0xC26B, H3), new CharRange(0xC26C, 0xC26C, H2), new CharRange(0xC26D, 0xC287, H3), new CharRange(0xC288, 0xC288, H2), new CharRange(0xC289, 0xC2A3, H3), new CharRange(0xC2A4, 0xC2A4, H2), new CharRange(0xC2A5, 0xC2BF, H3), new CharRange(0xC2C0, 0xC2C0, H2), new CharRange(0xC2C1, 0xC2DB, H3), new CharRange(0xC2DC, 0xC2DC, H2), new CharRange(0xC2DD, 0xC2F7, H3), new CharRange(0xC2F8, 0xC2F8, H2), new CharRange(0xC2F9, 0xC313, H3), new CharRange(0xC314, 0xC314, H2), new CharRange(0xC315, 0xC32F, H3), new CharRange(0xC330, 0xC330, H2), new CharRange(0xC331, 0xC34B, H3), new CharRange(0xC34C, 0xC34C, H2), new CharRange(0xC34D, 0xC367, H3), new CharRange(0xC368, 0xC368, H2), new CharRange(0xC369, 0xC383, H3), new CharRange(0xC384, 0xC384, H2), new CharRange(0xC385, 0xC39F, H3), new CharRange(0xC3A0, 0xC3A0, H2), new CharRange(0xC3A1, 0xC3BB, H3), new CharRange(0xC3BC, 0xC3BC, H2), new CharRange(0xC3BD, 0xC3D7, H3), new CharRange(0xC3D8, 0xC3D8, H2), new CharRange(0xC3D9, 0xC3F3, H3), new CharRange(0xC3F4, 0xC3F4, H2), new CharRange(0xC3F5, 0xC40F, H3), new CharRange(0xC410, 0xC410, H2), new CharRange(0xC411, 0xC42B, H3), new CharRange(0xC42C, 0xC42C, H2), new CharRange(0xC42D, 0xC447, H3), new CharRange(0xC448, 0xC448, H2), new CharRange(0xC449, 0xC463, H3), new CharRange(0xC464, 0xC464, H2), new CharRange(0xC465, 0xC47F, H3), new CharRange(0xC480, 0xC480, H2), new CharRange(0xC481, 0xC49B, H3), new CharRange(0xC49C, 0xC49C, H2), new CharRange(0xC49D, 0xC4B7, H3), new CharRange(0xC4B8, 0xC4B8, H2), new CharRange(0xC4B9, 0xC4D3, H3), new CharRange(0xC4D4, 0xC4D4, H2), new CharRange(0xC4D5, 0xC4EF, H3), new CharRange(0xC4F0, 0xC4F0, H2), new CharRange(0xC4F1, 0xC50B, H3), new CharRange(0xC50C, 0xC50C, H2), new CharRange(0xC50D, 0xC527, H3), new CharRange(0xC528, 0xC528, H2), new CharRange(0xC529, 0xC543, H3), new CharRange(0xC544, 0xC544, H2), new CharRange(0xC545, 0xC55F, H3), new CharRange(0xC560, 0xC560, H2), new CharRange(0xC561, 0xC57B, H3), new CharRange(0xC57C, 0xC57C, H2), new CharRange(0xC57D, 0xC597, H3), new CharRange(0xC598, 0xC598, H2), new CharRange(0xC599, 0xC5B3, H3), new CharRange(0xC5B4, 0xC5B4, H2), new CharRange(0xC5B5, 0xC5CF, H3), new CharRange(0xC5D0, 0xC5D0, H2), new CharRange(0xC5D1, 0xC5EB, H3), new CharRange(0xC5EC, 0xC5EC, H2), new CharRange(0xC5ED, 0xC607, H3), new CharRange(0xC608, 0xC608, H2), new CharRange(0xC609, 0xC623, H3), new CharRange(0xC624, 0xC624, H2), new CharRange(0xC625, 0xC63F, H3), new CharRange(0xC640, 0xC640, H2), new CharRange(0xC641, 0xC65B, H3), new CharRange(0xC65C, 0xC65C, H2), new CharRange(0xC65D, 0xC677, H3), new CharRange(0xC678, 0xC678, H2), new CharRange(0xC679, 0xC693, H3), new CharRange(0xC694, 0xC694, H2), new CharRange(0xC695, 0xC6AF, H3), new CharRange(0xC6B0, 0xC6B0, H2), new CharRange(0xC6B1, 0xC6CB, H3), new CharRange(0xC6CC, 0xC6CC, H2), new CharRange(0xC6CD, 0xC6E7, H3), new CharRange(0xC6E8, 0xC6E8, H2), new CharRange(0xC6E9, 0xC703, H3), new CharRange(0xC704, 0xC704, H2), new CharRange(0xC705, 0xC71F, H3), new CharRange(0xC720, 0xC720, H2), new CharRange(0xC721, 0xC73B, H3), new CharRange(0xC73C, 0xC73C, H2), new CharRange(0xC73D, 0xC757, H3), new CharRange(0xC758, 0xC758, H2), new CharRange(0xC759, 0xC773, H3), new CharRange(0xC774, 0xC774, H2), new CharRange(0xC775, 0xC78F, H3), new CharRange(0xC790, 0xC790, H2), new CharRange(0xC791, 0xC7AB, H3), new CharRange(0xC7AC, 0xC7AC, H2), new CharRange(0xC7AD, 0xC7C7, H3), new CharRange(0xC7C8, 0xC7C8, H2), new CharRange(0xC7C9, 0xC7E3, H3), new CharRange(0xC7E4, 0xC7E4, H2), new CharRange(0xC7E5, 0xC7FF, H3), new CharRange(0xC800, 0xC800, H2), new CharRange(0xC801, 0xC81B, H3), new CharRange(0xC81C, 0xC81C, H2), new CharRange(0xC81D, 0xC837, H3), new CharRange(0xC838, 0xC838, H2), new CharRange(0xC839, 0xC853, H3), new CharRange(0xC854, 0xC854, H2), new CharRange(0xC855, 0xC86F, H3), new CharRange(0xC870, 0xC870, H2), new CharRange(0xC871, 0xC88B, H3), new CharRange(0xC88C, 0xC88C, H2), new CharRange(0xC88D, 0xC8A7, H3), new CharRange(0xC8A8, 0xC8A8, H2), new CharRange(0xC8A9, 0xC8C3, H3), new CharRange(0xC8C4, 0xC8C4, H2), new CharRange(0xC8C5, 0xC8DF, H3), new CharRange(0xC8E0, 0xC8E0, H2), new CharRange(0xC8E1, 0xC8FB, H3), new CharRange(0xC8FC, 0xC8FC, H2), new CharRange(0xC8FD, 0xC917, H3), new CharRange(0xC918, 0xC918, H2), new CharRange(0xC919, 0xC933, H3), new CharRange(0xC934, 0xC934, H2), new CharRange(0xC935, 0xC94F, H3), new CharRange(0xC950, 0xC950, H2), new CharRange(0xC951, 0xC96B, H3), new CharRange(0xC96C, 0xC96C, H2), new CharRange(0xC96D, 0xC987, H3), new CharRange(0xC988, 0xC988, H2), new CharRange(0xC989, 0xC9A3, H3), new CharRange(0xC9A4, 0xC9A4, H2), new CharRange(0xC9A5, 0xC9BF, H3), new CharRange(0xC9C0, 0xC9C0, H2), new CharRange(0xC9C1, 0xC9DB, H3), new CharRange(0xC9DC, 0xC9DC, H2), new CharRange(0xC9DD, 0xC9F7, H3), new CharRange(0xC9F8, 0xC9F8, H2), new CharRange(0xC9F9, 0xCA13, H3), new CharRange(0xCA14, 0xCA14, H2), new CharRange(0xCA15, 0xCA2F, H3), new CharRange(0xCA30, 0xCA30, H2), new CharRange(0xCA31, 0xCA4B, H3), new CharRange(0xCA4C, 0xCA4C, H2), new CharRange(0xCA4D, 0xCA67, H3), new CharRange(0xCA68, 0xCA68, H2), new CharRange(0xCA69, 0xCA83, H3), new CharRange(0xCA84, 0xCA84, H2), new CharRange(0xCA85, 0xCA9F, H3), new CharRange(0xCAA0, 0xCAA0, H2), new CharRange(0xCAA1, 0xCABB, H3), new CharRange(0xCABC, 0xCABC, H2), new CharRange(0xCABD, 0xCAD7, H3), new CharRange(0xCAD8, 0xCAD8, H2), new CharRange(0xCAD9, 0xCAF3, H3), new CharRange(0xCAF4, 0xCAF4, H2), new CharRange(0xCAF5, 0xCB0F, H3), new CharRange(0xCB10, 0xCB10, H2), new CharRange(0xCB11, 0xCB2B, H3), new CharRange(0xCB2C, 0xCB2C, H2), new CharRange(0xCB2D, 0xCB47, H3), new CharRange(0xCB48, 0xCB48, H2), new CharRange(0xCB49, 0xCB63, H3), new CharRange(0xCB64, 0xCB64, H2), new CharRange(0xCB65, 0xCB7F, H3), new CharRange(0xCB80, 0xCB80, H2), new CharRange(0xCB81, 0xCB9B, H3), new CharRange(0xCB9C, 0xCB9C, H2), new CharRange(0xCB9D, 0xCBB7, H3), new CharRange(0xCBB8, 0xCBB8, H2), new CharRange(0xCBB9, 0xCBD3, H3), new CharRange(0xCBD4, 0xCBD4, H2), new CharRange(0xCBD5, 0xCBEF, H3), new CharRange(0xCBF0, 0xCBF0, H2), new CharRange(0xCBF1, 0xCC0B, H3), new CharRange(0xCC0C, 0xCC0C, H2), new CharRange(0xCC0D, 0xCC27, H3), new CharRange(0xCC28, 0xCC28, H2), new CharRange(0xCC29, 0xCC43, H3), new CharRange(0xCC44, 0xCC44, H2), new CharRange(0xCC45, 0xCC5F, H3), new CharRange(0xCC60, 0xCC60, H2), new CharRange(0xCC61, 0xCC7B, H3), new CharRange(0xCC7C, 0xCC7C, H2), new CharRange(0xCC7D, 0xCC97, H3), new CharRange(0xCC98, 0xCC98, H2), new CharRange(0xCC99, 0xCCB3, H3), new CharRange(0xCCB4, 0xCCB4, H2), new CharRange(0xCCB5, 0xCCCF, H3), new CharRange(0xCCD0, 0xCCD0, H2), new CharRange(0xCCD1, 0xCCEB, H3), new CharRange(0xCCEC, 0xCCEC, H2), new CharRange(0xCCED, 0xCD07, H3), new CharRange(0xCD08, 0xCD08, H2), new CharRange(0xCD09, 0xCD23, H3), new CharRange(0xCD24, 0xCD24, H2), new CharRange(0xCD25, 0xCD3F, H3), new CharRange(0xCD40, 0xCD40, H2), new CharRange(0xCD41, 0xCD5B, H3), new CharRange(0xCD5C, 0xCD5C, H2), new CharRange(0xCD5D, 0xCD77, H3), new CharRange(0xCD78, 0xCD78, H2), new CharRange(0xCD79, 0xCD93, H3), new CharRange(0xCD94, 0xCD94, H2), new CharRange(0xCD95, 0xCDAF, H3), new CharRange(0xCDB0, 0xCDB0, H2), new CharRange(0xCDB1, 0xCDCB, H3), new CharRange(0xCDCC, 0xCDCC, H2), new CharRange(0xCDCD, 0xCDE7, H3), new CharRange(0xCDE8, 0xCDE8, H2), new CharRange(0xCDE9, 0xCE03, H3), new CharRange(0xCE04, 0xCE04, H2), new CharRange(0xCE05, 0xCE1F, H3), new CharRange(0xCE20, 0xCE20, H2), new CharRange(0xCE21, 0xCE3B, H3), new CharRange(0xCE3C, 0xCE3C, H2), new CharRange(0xCE3D, 0xCE57, H3), new CharRange(0xCE58, 0xCE58, H2), new CharRange(0xCE59, 0xCE73, H3), new CharRange(0xCE74, 0xCE74, H2), new CharRange(0xCE75, 0xCE8F, H3), new CharRange(0xCE90, 0xCE90, H2), new CharRange(0xCE91, 0xCEAB, H3), new CharRange(0xCEAC, 0xCEAC, H2), new CharRange(0xCEAD, 0xCEC7, H3), new CharRange(0xCEC8, 0xCEC8, H2), new CharRange(0xCEC9, 0xCEE3, H3), new CharRange(0xCEE4, 0xCEE4, H2), new CharRange(0xCEE5, 0xCEFF, H3), new CharRange(0xCF00, 0xCF00, H2), new CharRange(0xCF01, 0xCF1B, H3), new CharRange(0xCF1C, 0xCF1C, H2), new CharRange(0xCF1D, 0xCF37, H3), new CharRange(0xCF38, 0xCF38, H2), new CharRange(0xCF39, 0xCF53, H3), new CharRange(0xCF54, 0xCF54, H2), new CharRange(0xCF55, 0xCF6F, H3), new CharRange(0xCF70, 0xCF70, H2), new CharRange(0xCF71, 0xCF8B, H3), new CharRange(0xCF8C, 0xCF8C, H2), new CharRange(0xCF8D, 0xCFA7, H3), new CharRange(0xCFA8, 0xCFA8, H2), new CharRange(0xCFA9, 0xCFC3, H3), new CharRange(0xCFC4, 0xCFC4, H2), new CharRange(0xCFC5, 0xCFDF, H3), new CharRange(0xCFE0, 0xCFE0, H2), new CharRange(0xCFE1, 0xCFFB, H3), new CharRange(0xCFFC, 0xCFFC, H2), new CharRange(0xCFFD, 0xD017, H3), new CharRange(0xD018, 0xD018, H2), new CharRange(0xD019, 0xD033, H3), new CharRange(0xD034, 0xD034, H2), new CharRange(0xD035, 0xD04F, H3), new CharRange(0xD050, 0xD050, H2), new CharRange(0xD051, 0xD06B, H3), new CharRange(0xD06C, 0xD06C, H2), new CharRange(0xD06D, 0xD087, H3), new CharRange(0xD088, 0xD088, H2), new CharRange(0xD089, 0xD0A3, H3), new CharRange(0xD0A4, 0xD0A4, H2), new CharRange(0xD0A5, 0xD0BF, H3), new CharRange(0xD0C0, 0xD0C0, H2), new CharRange(0xD0C1, 0xD0DB, H3), new CharRange(0xD0DC, 0xD0DC, H2), new CharRange(0xD0DD, 0xD0F7, H3), new CharRange(0xD0F8, 0xD0F8, H2), new CharRange(0xD0F9, 0xD113, H3), new CharRange(0xD114, 0xD114, H2), new CharRange(0xD115, 0xD12F, H3), new CharRange(0xD130, 0xD130, H2), new CharRange(0xD131, 0xD14B, H3), new CharRange(0xD14C, 0xD14C, H2), new CharRange(0xD14D, 0xD167, H3), new CharRange(0xD168, 0xD168, H2), new CharRange(0xD169, 0xD183, H3), new CharRange(0xD184, 0xD184, H2), new CharRange(0xD185, 0xD19F, H3), new CharRange(0xD1A0, 0xD1A0, H2), new CharRange(0xD1A1, 0xD1BB, H3), new CharRange(0xD1BC, 0xD1BC, H2), new CharRange(0xD1BD, 0xD1D7, H3), new CharRange(0xD1D8, 0xD1D8, H2), new CharRange(0xD1D9, 0xD1F3, H3), new CharRange(0xD1F4, 0xD1F4, H2), new CharRange(0xD1F5, 0xD20F, H3), new CharRange(0xD210, 0xD210, H2), new CharRange(0xD211, 0xD22B, H3), new CharRange(0xD22C, 0xD22C, H2), new CharRange(0xD22D, 0xD247, H3), new CharRange(0xD248, 0xD248, H2), new CharRange(0xD249, 0xD263, H3), new CharRange(0xD264, 0xD264, H2), new CharRange(0xD265, 0xD27F, H3), new CharRange(0xD280, 0xD280, H2), new CharRange(0xD281, 0xD29B, H3), new CharRange(0xD29C, 0xD29C, H2), new CharRange(0xD29D, 0xD2B7, H3), new CharRange(0xD2B8, 0xD2B8, H2), new CharRange(0xD2B9, 0xD2D3, H3), new CharRange(0xD2D4, 0xD2D4, H2), new CharRange(0xD2D5, 0xD2EF, H3), new CharRange(0xD2F0, 0xD2F0, H2), new CharRange(0xD2F1, 0xD30B, H3), new CharRange(0xD30C, 0xD30C, H2), new CharRange(0xD30D, 0xD327, H3), new CharRange(0xD328, 0xD328, H2), new CharRange(0xD329, 0xD343, H3), new CharRange(0xD344, 0xD344, H2), new CharRange(0xD345, 0xD35F, H3), new CharRange(0xD360, 0xD360, H2), new CharRange(0xD361, 0xD37B, H3), new CharRange(0xD37C, 0xD37C, H2), new CharRange(0xD37D, 0xD397, H3), new CharRange(0xD398, 0xD398, H2), new CharRange(0xD399, 0xD3B3, H3), new CharRange(0xD3B4, 0xD3B4, H2), new CharRange(0xD3B5, 0xD3CF, H3), new CharRange(0xD3D0, 0xD3D0, H2), new CharRange(0xD3D1, 0xD3EB, H3), new CharRange(0xD3EC, 0xD3EC, H2), new CharRange(0xD3ED, 0xD407, H3), new CharRange(0xD408, 0xD408, H2), new CharRange(0xD409, 0xD423, H3), new CharRange(0xD424, 0xD424, H2), new CharRange(0xD425, 0xD43F, H3), new CharRange(0xD440, 0xD440, H2), new CharRange(0xD441, 0xD45B, H3), new CharRange(0xD45C, 0xD45C, H2), new CharRange(0xD45D, 0xD477, H3), new CharRange(0xD478, 0xD478, H2), new CharRange(0xD479, 0xD493, H3), new CharRange(0xD494, 0xD494, H2), new CharRange(0xD495, 0xD4AF, H3), new CharRange(0xD4B0, 0xD4B0, H2), new CharRange(0xD4B1, 0xD4CB, H3), new CharRange(0xD4CC, 0xD4CC, H2), new CharRange(0xD4CD, 0xD4E7, H3), new CharRange(0xD4E8, 0xD4E8, H2), new CharRange(0xD4E9, 0xD503, H3), new CharRange(0xD504, 0xD504, H2), new CharRange(0xD505, 0xD51F, H3), new CharRange(0xD520, 0xD520, H2), new CharRange(0xD521, 0xD53B, H3), new CharRange(0xD53C, 0xD53C, H2), new CharRange(0xD53D, 0xD557, H3), new CharRange(0xD558, 0xD558, H2), new CharRange(0xD559, 0xD573, H3), new CharRange(0xD574, 0xD574, H2), new CharRange(0xD575, 0xD58F, H3), new CharRange(0xD590, 0xD590, H2), new CharRange(0xD591, 0xD5AB, H3), new CharRange(0xD5AC, 0xD5AC, H2), new CharRange(0xD5AD, 0xD5C7, H3), new CharRange(0xD5C8, 0xD5C8, H2), new CharRange(0xD5C9, 0xD5E3, H3), new CharRange(0xD5E4, 0xD5E4, H2), new CharRange(0xD5E5, 0xD5FF, H3), new CharRange(0xD600, 0xD600, H2), new CharRange(0xD601, 0xD61B, H3), new CharRange(0xD61C, 0xD61C, H2), new CharRange(0xD61D, 0xD637, H3), new CharRange(0xD638, 0xD638, H2), new CharRange(0xD639, 0xD653, H3), new CharRange(0xD654, 0xD654, H2), new CharRange(0xD655, 0xD66F, H3), new CharRange(0xD670, 0xD670, H2), new CharRange(0xD671, 0xD68B, H3), new CharRange(0xD68C, 0xD68C, H2), new CharRange(0xD68D, 0xD6A7, H3), new CharRange(0xD6A8, 0xD6A8, H2), new CharRange(0xD6A9, 0xD6C3, H3), new CharRange(0xD6C4, 0xD6C4, H2), new CharRange(0xD6C5, 0xD6DF, H3), new CharRange(0xD6E0, 0xD6E0, H2), new CharRange(0xD6E1, 0xD6FB, H3), new CharRange(0xD6FC, 0xD6FC, H2), new CharRange(0xD6FD, 0xD717, H3), new CharRange(0xD718, 0xD718, H2), new CharRange(0xD719, 0xD733, H3), new CharRange(0xD734, 0xD734, H2), new CharRange(0xD735, 0xD74F, H3), new CharRange(0xD750, 0xD750, H2), new CharRange(0xD751, 0xD76B, H3), new CharRange(0xD76C, 0xD76C, H2), new CharRange(0xD76D, 0xD787, H3), new CharRange(0xD788, 0xD788, H2), new CharRange(0xD789, 0xD7A3, H3), new CharRange(0xD7B0, 0xD7C6, JV), new CharRange(0xD7CB, 0xD7FB, JT), new CharRange(0xD800, 0xDFFF, SG), new CharRange(0xE000, 0xF8FF, XX), new CharRange(0xF900, 0xFAFF, ID), new CharRange(0xFB00, 0xFB17, AL), new CharRange(0xFB1D, 0xFB1D, HL), new CharRange(0xFB1E, 0xFB1E, CM), new CharRange(0xFB1F, 0xFB28, HL), new CharRange(0xFB29, 0xFB29, AL), new CharRange(0xFB2A, 0xFB4F, HL), new CharRange(0xFB50, 0xFD3D, AL), new CharRange(0xFD3E, 0xFD3E, OP), new CharRange(0xFD3F, 0xFD3F, CL), new CharRange(0xFD50, 0xFDFB, AL), new CharRange(0xFDFC, 0xFDFC, PO), new CharRange(0xFDFD, 0xFDFD, AL), new CharRange(0xFE00, 0xFE0F, CM), new CharRange(0xFE10, 0xFE10, IS), new CharRange(0xFE11, 0xFE12, CL), new CharRange(0xFE13, 0xFE14, IS), new CharRange(0xFE15, 0xFE16, EX), new CharRange(0xFE17, 0xFE17, OP), new CharRange(0xFE18, 0xFE18, CL), new CharRange(0xFE19, 0xFE19, IN), new CharRange(0xFE20, 0xFE26, CM), new CharRange(0xFE30, 0xFE34, ID), new CharRange(0xFE35, 0xFE35, OP), new CharRange(0xFE36, 0xFE36, CL), new CharRange(0xFE37, 0xFE37, OP), new CharRange(0xFE38, 0xFE38, CL), new CharRange(0xFE39, 0xFE39, OP), new CharRange(0xFE3A, 0xFE3A, CL), new CharRange(0xFE3B, 0xFE3B, OP), new CharRange(0xFE3C, 0xFE3C, CL), new CharRange(0xFE3D, 0xFE3D, OP), new CharRange(0xFE3E, 0xFE3E, CL), new CharRange(0xFE3F, 0xFE3F, OP), new CharRange(0xFE40, 0xFE40, CL), new CharRange(0xFE41, 0xFE41, OP), new CharRange(0xFE42, 0xFE42, CL), new CharRange(0xFE43, 0xFE43, OP), new CharRange(0xFE44, 0xFE44, CL), new CharRange(0xFE45, 0xFE46, ID), new CharRange(0xFE47, 0xFE47, OP), new CharRange(0xFE48, 0xFE48, CL), new CharRange(0xFE49, 0xFE4F, ID), new CharRange(0xFE50, 0xFE50, CL), new CharRange(0xFE51, 0xFE51, ID), new CharRange(0xFE52, 0xFE52, CL), new CharRange(0xFE54, 0xFE55, NS), new CharRange(0xFE56, 0xFE57, EX), new CharRange(0xFE58, 0xFE58, ID), new CharRange(0xFE59, 0xFE59, OP), new CharRange(0xFE5A, 0xFE5A, CL), new CharRange(0xFE5B, 0xFE5B, OP), new CharRange(0xFE5C, 0xFE5C, CL), new CharRange(0xFE5D, 0xFE5D, OP), new CharRange(0xFE5E, 0xFE5E, CL), new CharRange(0xFE5F, 0xFE68, ID), new CharRange(0xFE69, 0xFE69, PR), new CharRange(0xFE6A, 0xFE6A, PO), new CharRange(0xFE6B, 0xFE6B, ID), new CharRange(0xFE70, 0xFEFC, AL), new CharRange(0xFEFF, 0xFEFF, WJ), new CharRange(0xFF01, 0xFF01, EX), new CharRange(0xFF02, 0xFF03, ID), new CharRange(0xFF04, 0xFF04, PR), new CharRange(0xFF05, 0xFF05, PO), new CharRange(0xFF06, 0xFF07, ID), new CharRange(0xFF08, 0xFF08, OP), new CharRange(0xFF09, 0xFF09, CL), new CharRange(0xFF0A, 0xFF0B, ID), new CharRange(0xFF0C, 0xFF0C, CL), new CharRange(0xFF0D, 0xFF0D, ID), new CharRange(0xFF0E, 0xFF0E, CL), new CharRange(0xFF0F, 0xFF19, ID), new CharRange(0xFF1A, 0xFF1B, NS), new CharRange(0xFF1C, 0xFF1E, ID), new CharRange(0xFF1F, 0xFF1F, EX), new CharRange(0xFF20, 0xFF3A, ID), new CharRange(0xFF3B, 0xFF3B, OP), new CharRange(0xFF3C, 0xFF3C, ID), new CharRange(0xFF3D, 0xFF3D, CL), new CharRange(0xFF3E, 0xFF5A, ID), new CharRange(0xFF5B, 0xFF5B, OP), new CharRange(0xFF5C, 0xFF5C, ID), new CharRange(0xFF5D, 0xFF5D, CL), new CharRange(0xFF5E, 0xFF5E, ID), new CharRange(0xFF5F, 0xFF5F, OP), new CharRange(0xFF60, 0xFF61, CL), new CharRange(0xFF62, 0xFF62, OP), new CharRange(0xFF63, 0xFF64, CL), new CharRange(0xFF65, 0xFF65, NS), new CharRange(0xFF66, 0xFF66, AL), new CharRange(0xFF67, 0xFF70, CJ), new CharRange(0xFF71, 0xFF9D, AL), new CharRange(0xFF9E, 0xFF9F, NS), new CharRange(0xFFA0, 0xFFDC, AL), new CharRange(0xFFE0, 0xFFE0, PO), new CharRange(0xFFE1, 0xFFE1, PR), new CharRange(0xFFE2, 0xFFE4, ID), new CharRange(0xFFE5, 0xFFE6, PR), new CharRange(0xFFE8, 0xFFEE, AL), new CharRange(0xFFF9, 0xFFFB, CM), new CharRange(0xFFFC, 0xFFFC, CB), new CharRange(0xFFFD, 0xFFFD, AI), new CharRange(0x10000, 0x100FA, AL), new CharRange(0x10100, 0x10102, BA), new CharRange(0x10107, 0x101FC, AL), new CharRange(0x101FD, 0x101FD, CM), new CharRange(0x10280, 0x1039D, AL), new CharRange(0x1039F, 0x1039F, BA), new CharRange(0x103A0, 0x103CF, AL), new CharRange(0x103D0, 0x103D0, BA), new CharRange(0x103D1, 0x1049D, AL), new CharRange(0x104A0, 0x104A9, NU), new CharRange(0x10800, 0x10855, AL), new CharRange(0x10857, 0x10857, BA), new CharRange(0x10858, 0x1091B, AL), new CharRange(0x1091F, 0x1091F, BA), new CharRange(0x10920, 0x10A00, AL), new CharRange(0x10A01, 0x10A0F, CM), new CharRange(0x10A10, 0x10A33, AL), new CharRange(0x10A38, 0x10A3F, CM), new CharRange(0x10A40, 0x10A47, AL), new CharRange(0x10A50, 0x10A57, BA), new CharRange(0x10A58, 0x10B35, AL), new CharRange(0x10B39, 0x10B3F, BA), new CharRange(0x10B40, 0x10E7E, AL), new CharRange(0x11000, 0x11002, CM), new CharRange(0x11003, 0x11037, AL), new CharRange(0x11038, 0x11046, CM), new CharRange(0x11047, 0x11048, BA), new CharRange(0x11049, 0x11065, AL), new CharRange(0x11066, 0x1106F, NU), new CharRange(0x11080, 0x11082, CM), new CharRange(0x11083, 0x110AF, AL), new CharRange(0x110B0, 0x110BA, CM), new CharRange(0x110BB, 0x110BD, AL), new CharRange(0x110BE, 0x110C1, BA), new CharRange(0x110D0, 0x110E8, AL), new CharRange(0x110F0, 0x110F9, NU), new CharRange(0x11100, 0x11102, CM), new CharRange(0x11103, 0x11126, AL), new CharRange(0x11127, 0x11134, CM), new CharRange(0x11136, 0x1113F, NU), new CharRange(0x11140, 0x11143, BA), new CharRange(0x11180, 0x11182, CM), new CharRange(0x11183, 0x111B2, AL), new CharRange(0x111B3, 0x111C0, CM), new CharRange(0x111C1, 0x111C4, AL), new CharRange(0x111C5, 0x111C6, BA), new CharRange(0x111C7, 0x111C7, AL), new CharRange(0x111C8, 0x111C8, BA), new CharRange(0x111D0, 0x111D9, NU), new CharRange(0x11680, 0x116AA, AL), new CharRange(0x116AB, 0x116B7, CM), new CharRange(0x116C0, 0x116C9, NU), new CharRange(0x12000, 0x12462, AL), new CharRange(0x12470, 0x12473, BA), new CharRange(0x13000, 0x13257, AL), new CharRange(0x13258, 0x1325A, OP), new CharRange(0x1325B, 0x1325D, CL), new CharRange(0x1325E, 0x13281, AL), new CharRange(0x13282, 0x13282, CL), new CharRange(0x13283, 0x13285, AL), new CharRange(0x13286, 0x13286, OP), new CharRange(0x13287, 0x13287, CL), new CharRange(0x13288, 0x13288, OP), new CharRange(0x13289, 0x13289, CL), new CharRange(0x1328A, 0x13378, AL), new CharRange(0x13379, 0x13379, OP), new CharRange(0x1337A, 0x1337B, CL), new CharRange(0x1337C, 0x16F50, AL), new CharRange(0x16F51, 0x16F92, CM), new CharRange(0x16F93, 0x16F9F, AL), new CharRange(0x1B000, 0x1B001, ID), new CharRange(0x1D000, 0x1D164, AL), new CharRange(0x1D165, 0x1D169, CM), new CharRange(0x1D16A, 0x1D16C, AL), new CharRange(0x1D16D, 0x1D182, CM), new CharRange(0x1D183, 0x1D184, AL), new CharRange(0x1D185, 0x1D18B, CM), new CharRange(0x1D18C, 0x1D1A9, AL), new CharRange(0x1D1AA, 0x1D1AD, CM), new CharRange(0x1D1AE, 0x1D241, AL), new CharRange(0x1D242, 0x1D244, CM), new CharRange(0x1D245, 0x1D7CB, AL), new CharRange(0x1D7CE, 0x1D7FF, NU), new CharRange(0x1EE00, 0x1EEF1, AL), new CharRange(0x1F000, 0x1F0DF, ID), new CharRange(0x1F100, 0x1F12D, AI), new CharRange(0x1F12E, 0x1F12E, AL), new CharRange(0x1F130, 0x1F169, AI), new CharRange(0x1F16A, 0x1F16B, AL), new CharRange(0x1F170, 0x1F19A, AI), new CharRange(0x1F1E6, 0x1F1FF, RI), new CharRange(0x1F200, 0x1F3B4, ID), new CharRange(0x1F3B5, 0x1F3B6, AL), new CharRange(0x1F3B7, 0x1F3BB, ID), new CharRange(0x1F3BC, 0x1F3BC, AL), new CharRange(0x1F3BD, 0x1F49F, ID), new CharRange(0x1F4A0, 0x1F4A0, AL), new CharRange(0x1F4A1, 0x1F4A1, ID), new CharRange(0x1F4A2, 0x1F4A2, AL), new CharRange(0x1F4A3, 0x1F4A3, ID), new CharRange(0x1F4A4, 0x1F4A4, AL), new CharRange(0x1F4A5, 0x1F4AE, ID), new CharRange(0x1F4AF, 0x1F4AF, AL), new CharRange(0x1F4B0, 0x1F4B0, ID), new CharRange(0x1F4B1, 0x1F4B2, AL), new CharRange(0x1F4B3, 0x1F4FC, ID), new CharRange(0x1F500, 0x1F506, AL), new CharRange(0x1F507, 0x1F516, ID), new CharRange(0x1F517, 0x1F524, AL), new CharRange(0x1F525, 0x1F531, ID), new CharRange(0x1F532, 0x1F543, AL), new CharRange(0x1F550, 0x1F6C5, ID), new CharRange(0x1F700, 0x1F773, AL), new CharRange(0x20000, 0x3FFFD, ID), new CharRange(0xE0001, 0xE01EF, CM), new CharRange(0xF0000, 0x10FFFD, XX)];

}).call(this);
